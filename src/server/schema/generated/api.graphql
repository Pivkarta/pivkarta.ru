schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  routes(where: RouteWhereInput, orderBy: RouteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Route]!
  beers(where: BeerWhereInput, orderBy: BeerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Beer]!
  accounts(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Account]!
  transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction]!
  userTarifs(where: UserTarifWhereInput, orderBy: UserTarifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserTarif]!
  tarifRequests(where: TarifRequestWhereInput, orderBy: TarifRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TarifRequest]!
  cities(where: CityWhereInput, orderBy: CityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [City]!
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment]!
  commentTypes(where: CommentTypeWhereInput, orderBy: CommentTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CommentType]!
  letters(where: LetterWhereInput, orderBy: LetterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Letter]!
  photos(where: PhotoWhereInput, orderBy: PhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Photo]!
  places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place]!
  placeBeers(where: PlaceBeerWhereInput, orderBy: PlaceBeerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PlaceBeer]!
  topics(where: TopicWhereInput, orderBy: TopicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Topic]!
  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File]!
  logs(where: LogWhereInput, orderBy: LogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Log]!
  userGroups(where: UserGroupWhereInput, orderBy: UserGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserGroup]!
  logedIns(where: LogedInWhereInput, orderBy: LogedInOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogedIn]!
  tarifs(where: TarifWhereInput, orderBy: TarifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tarif]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  route(where: RouteWhereUniqueInput!): Route
  beer(where: BeerWhereUniqueInput!): Beer
  account(where: AccountWhereUniqueInput!): Account
  transaction(where: TransactionWhereUniqueInput!): Transaction
  userTarif(where: UserTarifWhereUniqueInput!): UserTarif
  tarifRequest(where: TarifRequestWhereUniqueInput!): TarifRequest
  city(where: CityWhereUniqueInput!): City
  comment(where: CommentWhereUniqueInput!): Comment
  commentType(where: CommentTypeWhereUniqueInput!): CommentType
  letter(where: LetterWhereUniqueInput!): Letter
  photo(where: PhotoWhereUniqueInput!): Photo
  place(where: PlaceWhereUniqueInput!): Place
  placeBeer(where: PlaceBeerWhereUniqueInput!): PlaceBeer
  topic(where: TopicWhereUniqueInput!): Topic
  file(where: FileWhereUniqueInput!): File
  log(where: LogWhereUniqueInput!): Log
  userGroup(where: UserGroupWhereUniqueInput!): UserGroup
  logedIn(where: LogedInWhereUniqueInput!): LogedIn
  tarif(where: TarifWhereUniqueInput!): Tarif
  user(where: UserWhereUniqueInput!): User
  routesConnection(where: RouteWhereInput, orderBy: RouteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RouteConnection!
  beersConnection(where: BeerWhereInput, orderBy: BeerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BeerConnection!
  accountsConnection(where: AccountWhereInput, orderBy: AccountOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AccountConnection!
  transactionsConnection(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TransactionConnection!
  userTarifsConnection(where: UserTarifWhereInput, orderBy: UserTarifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserTarifConnection!
  tarifRequestsConnection(where: TarifRequestWhereInput, orderBy: TarifRequestOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TarifRequestConnection!
  citiesConnection(where: CityWhereInput, orderBy: CityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CityConnection!
  commentsConnection(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentConnection!
  commentTypesConnection(where: CommentTypeWhereInput, orderBy: CommentTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CommentTypeConnection!
  lettersConnection(where: LetterWhereInput, orderBy: LetterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LetterConnection!
  photosConnection(where: PhotoWhereInput, orderBy: PhotoOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhotoConnection!
  placesConnection(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlaceConnection!
  placeBeersConnection(where: PlaceBeerWhereInput, orderBy: PlaceBeerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PlaceBeerConnection!
  topicsConnection(where: TopicWhereInput, orderBy: TopicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TopicConnection!
  filesConnection(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FileConnection!
  logsConnection(where: LogWhereInput, orderBy: LogOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LogConnection!
  userGroupsConnection(where: UserGroupWhereInput, orderBy: UserGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserGroupConnection!
  logedInsConnection(where: LogedInWhereInput, orderBy: LogedInOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): LogedInConnection!
  tarifsConnection(where: TarifWhereInput, orderBy: TarifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TarifConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  # Fetches an object given its ID
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
  me: User
  mapPlacesConnection(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int, center: CoordsInput, type: [PlaceType!]): MapPlaceConnection!
  mapGeoObjectsConnection(skip: Int, after: String, before: String, first: Int!, last: Int, where: PlaceWhereInput, beerWhere: BeerWhereInput, orderBy: PlaceOrderByInput, center: CoordsInput): mapGeoObjectsConnection!
}

type Mutation {
  createRoute(data: RouteCreateInput!): Route!
  createBeer(data: BeerCreateInput!): Beer!
  createAccount(data: AccountCreateInput!): Account!
  createTransaction(data: TransactionCreateInput!): Transaction!
  createUserTarif(data: UserTarifCreateInput!): UserTarif!
  createTarifRequest(data: TarifRequestCreateInput!): TarifRequest!
  createCity(data: CityCreateInput!): City!
  createComment(data: CommentCreateInput!): Comment!
  createCommentType(data: CommentTypeCreateInput!): CommentType!
  createLetter(data: LetterCreateInput!): Letter!
  createPhoto(data: PhotoCreateInput!): Photo!
  createPlace(data: PlaceCreateInput!): Place!
  createPlaceBeer(data: PlaceBeerCreateInput!): PlaceBeer!
  createTopic(data: TopicCreateInput!): Topic!
  createFile(data: FileCreateInput!): File!
  createLog(data: LogCreateInput!): Log!
  createUserGroup(data: UserGroupCreateInput!): UserGroup!
  createLogedIn(data: LogedInCreateInput!): LogedIn!
  createTarif(data: TarifCreateInput!): Tarif!
  createUser(data: UserCreateInput!): User!
  updateRoute(data: RouteUpdateInput!, where: RouteWhereUniqueInput!): Route
  updateBeer(data: BeerUpdateInput!, where: BeerWhereUniqueInput!): Beer
  updateAccount(data: AccountUpdateInput!, where: AccountWhereUniqueInput!): Account
  updateTransaction(data: TransactionUpdateInput!, where: TransactionWhereUniqueInput!): Transaction
  updateUserTarif(data: UserTarifUpdateInput!, where: UserTarifWhereUniqueInput!): UserTarif
  updateTarifRequest(data: TarifRequestUpdateInput!, where: TarifRequestWhereUniqueInput!): TarifRequest
  updateCity(data: CityUpdateInput!, where: CityWhereUniqueInput!): City
  updateComment(data: CommentUpdateInput!, where: CommentWhereUniqueInput!): Comment
  updateCommentType(data: CommentTypeUpdateInput!, where: CommentTypeWhereUniqueInput!): CommentType
  updateLetter(data: LetterUpdateInput!, where: LetterWhereUniqueInput!): Letter
  updatePhoto(data: PhotoUpdateInput!, where: PhotoWhereUniqueInput!): Photo
  updatePlace(data: PlaceUpdateInput!, where: PlaceWhereUniqueInput!): Place
  updatePlaceBeer(data: PlaceBeerUpdateInput!, where: PlaceBeerWhereUniqueInput!): PlaceBeer
  updateTopic(data: TopicUpdateInput!, where: TopicWhereUniqueInput!): Topic
  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
  updateLog(data: LogUpdateInput!, where: LogWhereUniqueInput!): Log
  updateUserGroup(data: UserGroupUpdateInput!, where: UserGroupWhereUniqueInput!): UserGroup
  updateLogedIn(data: LogedInUpdateInput!, where: LogedInWhereUniqueInput!): LogedIn
  updateTarif(data: TarifUpdateInput!, where: TarifWhereUniqueInput!): Tarif
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteRoute(where: RouteWhereUniqueInput!): Route
  deleteBeer(where: BeerWhereUniqueInput!): Beer
  deleteAccount(where: AccountWhereUniqueInput!): Account
  deleteTransaction(where: TransactionWhereUniqueInput!): Transaction
  deleteUserTarif(where: UserTarifWhereUniqueInput!): UserTarif
  deleteTarifRequest(where: TarifRequestWhereUniqueInput!): TarifRequest
  deleteCity(where: CityWhereUniqueInput!): City
  deleteComment(where: CommentWhereUniqueInput!): Comment
  deleteCommentType(where: CommentTypeWhereUniqueInput!): CommentType
  deleteLetter(where: LetterWhereUniqueInput!): Letter
  deletePhoto(where: PhotoWhereUniqueInput!): Photo
  deletePlace(where: PlaceWhereUniqueInput!): Place
  deletePlaceBeer(where: PlaceBeerWhereUniqueInput!): PlaceBeer
  deleteTopic(where: TopicWhereUniqueInput!): Topic
  deleteFile(where: FileWhereUniqueInput!): File
  deleteLog(where: LogWhereUniqueInput!): Log
  deleteUserGroup(where: UserGroupWhereUniqueInput!): UserGroup
  deleteLogedIn(where: LogedInWhereUniqueInput!): LogedIn
  deleteTarif(where: TarifWhereUniqueInput!): Tarif
  deleteUser(where: UserWhereUniqueInput!): User
  upsertRoute(where: RouteWhereUniqueInput!, create: RouteCreateInput!, update: RouteUpdateInput!): Route!
  upsertBeer(where: BeerWhereUniqueInput!, create: BeerCreateInput!, update: BeerUpdateInput!): Beer!
  upsertAccount(where: AccountWhereUniqueInput!, create: AccountCreateInput!, update: AccountUpdateInput!): Account!
  upsertTransaction(where: TransactionWhereUniqueInput!, create: TransactionCreateInput!, update: TransactionUpdateInput!): Transaction!
  upsertUserTarif(where: UserTarifWhereUniqueInput!, create: UserTarifCreateInput!, update: UserTarifUpdateInput!): UserTarif!
  upsertTarifRequest(where: TarifRequestWhereUniqueInput!, create: TarifRequestCreateInput!, update: TarifRequestUpdateInput!): TarifRequest!
  upsertCity(where: CityWhereUniqueInput!, create: CityCreateInput!, update: CityUpdateInput!): City!
  upsertComment(where: CommentWhereUniqueInput!, create: CommentCreateInput!, update: CommentUpdateInput!): Comment!
  upsertCommentType(where: CommentTypeWhereUniqueInput!, create: CommentTypeCreateInput!, update: CommentTypeUpdateInput!): CommentType!
  upsertLetter(where: LetterWhereUniqueInput!, create: LetterCreateInput!, update: LetterUpdateInput!): Letter!
  upsertPhoto(where: PhotoWhereUniqueInput!, create: PhotoCreateInput!, update: PhotoUpdateInput!): Photo!
  upsertPlace(where: PlaceWhereUniqueInput!, create: PlaceCreateInput!, update: PlaceUpdateInput!): Place!
  upsertPlaceBeer(where: PlaceBeerWhereUniqueInput!, create: PlaceBeerCreateInput!, update: PlaceBeerUpdateInput!): PlaceBeer!
  upsertTopic(where: TopicWhereUniqueInput!, create: TopicCreateInput!, update: TopicUpdateInput!): Topic!
  upsertFile(where: FileWhereUniqueInput!, create: FileCreateInput!, update: FileUpdateInput!): File!
  upsertLog(where: LogWhereUniqueInput!, create: LogCreateInput!, update: LogUpdateInput!): Log!
  upsertUserGroup(where: UserGroupWhereUniqueInput!, create: UserGroupCreateInput!, update: UserGroupUpdateInput!): UserGroup!
  upsertLogedIn(where: LogedInWhereUniqueInput!, create: LogedInCreateInput!, update: LogedInUpdateInput!): LogedIn!
  upsertTarif(where: TarifWhereUniqueInput!, create: TarifCreateInput!, update: TarifUpdateInput!): Tarif!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyRoutes(data: RouteUpdateInput!, where: RouteWhereInput): BatchPayload!
  updateManyBeers(data: BeerUpdateInput!, where: BeerWhereInput): BatchPayload!
  updateManyAccounts(data: AccountUpdateInput!, where: AccountWhereInput): BatchPayload!
  updateManyTransactions(data: TransactionUpdateInput!, where: TransactionWhereInput): BatchPayload!
  updateManyUserTarifs(data: UserTarifUpdateInput!, where: UserTarifWhereInput): BatchPayload!
  updateManyTarifRequests(data: TarifRequestUpdateInput!, where: TarifRequestWhereInput): BatchPayload!
  updateManyCities(data: CityUpdateInput!, where: CityWhereInput): BatchPayload!
  updateManyComments(data: CommentUpdateInput!, where: CommentWhereInput): BatchPayload!
  updateManyCommentTypes(data: CommentTypeUpdateInput!, where: CommentTypeWhereInput): BatchPayload!
  updateManyLetters(data: LetterUpdateInput!, where: LetterWhereInput): BatchPayload!
  updateManyPhotos(data: PhotoUpdateInput!, where: PhotoWhereInput): BatchPayload!
  updateManyPlaces(data: PlaceUpdateInput!, where: PlaceWhereInput): BatchPayload!
  updateManyPlaceBeers(data: PlaceBeerUpdateInput!, where: PlaceBeerWhereInput): BatchPayload!
  updateManyTopics(data: TopicUpdateInput!, where: TopicWhereInput): BatchPayload!
  updateManyFiles(data: FileUpdateInput!, where: FileWhereInput): BatchPayload!
  updateManyLogs(data: LogUpdateInput!, where: LogWhereInput): BatchPayload!
  updateManyUserGroups(data: UserGroupUpdateInput!, where: UserGroupWhereInput): BatchPayload!
  updateManyLogedIns(data: LogedInUpdateInput!, where: LogedInWhereInput): BatchPayload!
  updateManyTarifs(data: TarifUpdateInput!, where: TarifWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  deleteManyRoutes(where: RouteWhereInput): BatchPayload!
  deleteManyBeers(where: BeerWhereInput): BatchPayload!
  deleteManyAccounts(where: AccountWhereInput): BatchPayload!
  deleteManyTransactions(where: TransactionWhereInput): BatchPayload!
  deleteManyUserTarifs(where: UserTarifWhereInput): BatchPayload!
  deleteManyTarifRequests(where: TarifRequestWhereInput): BatchPayload!
  deleteManyCities(where: CityWhereInput): BatchPayload!
  deleteManyComments(where: CommentWhereInput): BatchPayload!
  deleteManyCommentTypes(where: CommentTypeWhereInput): BatchPayload!
  deleteManyLetters(where: LetterWhereInput): BatchPayload!
  deleteManyPhotos(where: PhotoWhereInput): BatchPayload!
  deleteManyPlaces(where: PlaceWhereInput): BatchPayload!
  deleteManyPlaceBeers(where: PlaceBeerWhereInput): BatchPayload!
  deleteManyTopics(where: TopicWhereInput): BatchPayload!
  deleteManyFiles(where: FileWhereInput): BatchPayload!
  deleteManyLogs(where: LogWhereInput): BatchPayload!
  deleteManyUserGroups(where: UserGroupWhereInput): BatchPayload!
  deleteManyLogedIns(where: LogedInWhereInput): BatchPayload!
  deleteManyTarifs(where: TarifWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  signup(data: UserCreateInput!): AuthPayload!
  signin(where: UserWhereUniqueInput!, password: String!): AuthPayload!
  createUserProcessor(data: UserCreateInput!): UserResponse!
  updateUserProcessor(where: UserWhereUniqueInput, data: UserUpdateInput!): UserResponse!
  resetPassword(where: UserWhereUniqueInput!): Boolean!
  singleUpload(file: Upload!): File
  multipleUpload(files: [Upload!]!): [File!]
  updateUserPhoto(data: UserUpdateInput!): User
  createTopicProcessor(data: TopicUpdateInput!): TopicResponse!
  updateTopicProcessor(id: ID, where: TopicWhereUniqueInput, data: TopicUpdateInput!): TopicResponse!
  updatePlaceData(where: PlaceWhereUniqueInput!, object_data: Json!): Place!
  updatePlaceProcessor(data: PlaceUpdateInput!, where: PlaceWhereUniqueInput!): PlaceResponse!
  updateBeerProcessor(data: BeerUpdateInput!, where: BeerWhereUniqueInput): BeerPayload!
  createBeerProcessor(data: BeerCreateInput!): BeerPayload!
  togglePlaceBeer(placeId: ID!, beerId: ID!, active: Boolean!): Place
  updatePlaceBeerProcessor(data: PlaceBeerUpdateInput!, where: PlaceBeerWhereUniqueInput!): PlaceBeerPayload
  createPlaceProcessor(data: PlaceCreateInput!): PlacePayload!
  createCommentProcessor(data: CommentCreateInput!): CommentResponse!
  updateCommentProcessor(where: CommentWhereUniqueInput, data: CommentUpdateInput!): CommentResponse!
}

type Subscription {
  route(where: RouteSubscriptionWhereInput): RouteSubscriptionPayload
  beer(where: BeerSubscriptionWhereInput): BeerSubscriptionPayload
  account(where: AccountSubscriptionWhereInput): AccountSubscriptionPayload
  transaction(where: TransactionSubscriptionWhereInput): TransactionSubscriptionPayload
  userTarif(where: UserTarifSubscriptionWhereInput): UserTarifSubscriptionPayload
  tarifRequest(where: TarifRequestSubscriptionWhereInput): TarifRequestSubscriptionPayload
  city(where: CitySubscriptionWhereInput): CitySubscriptionPayload
  comment(where: CommentSubscriptionWhereInput): CommentSubscriptionPayload
  commentType(where: CommentTypeSubscriptionWhereInput): CommentTypeSubscriptionPayload
  letter(where: LetterSubscriptionWhereInput): LetterSubscriptionPayload
  photo(where: PhotoSubscriptionWhereInput): PhotoSubscriptionPayload
  place(where: PlaceSubscriptionWhereInput): PlaceSubscriptionPayload
  placeBeer(where: PlaceBeerSubscriptionWhereInput): PlaceBeerSubscriptionPayload
  topic(where: TopicSubscriptionWhereInput): TopicSubscriptionPayload
  file(where: FileSubscriptionWhereInput): FileSubscriptionPayload
  log(where: LogSubscriptionWhereInput): LogSubscriptionPayload
  userGroup(where: UserGroupSubscriptionWhereInput): UserGroupSubscriptionPayload
  logedIn(where: LogedInSubscriptionWhereInput): LogedInSubscriptionPayload
  tarif(where: TarifSubscriptionWhereInput): TarifSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Account implements Node {
  id: ID!
  balance: Float!
  User(where: UserWhereInput): User!
  Transactions(where: TransactionWhereInput, orderBy: TransactionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Transaction!]
}

"""
A connection to a list of items.
"""
type AccountConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [AccountEdge]!
  aggregate: AggregateAccount!
}

input AccountCreateInput {
  balance: Float
  User: UserCreateOneWithoutAccountInput!
  Transactions: TransactionCreateManyWithoutAccountInput
}

input AccountCreateOneWithoutTransactionsInput {
  create: AccountCreateWithoutTransactionsInput
  connect: AccountWhereUniqueInput
}

input AccountCreateOneWithoutUserInput {
  create: AccountCreateWithoutUserInput
  connect: AccountWhereUniqueInput
}

input AccountCreateWithoutTransactionsInput {
  balance: Float
  User: UserCreateOneWithoutAccountInput!
}

input AccountCreateWithoutUserInput {
  balance: Float
  Transactions: TransactionCreateManyWithoutAccountInput
}

"""
An edge in a connection.
"""
type AccountEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Account!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum AccountOrderByInput {
  id_ASC
  id_DESC
  balance_ASC
  balance_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type AccountPreviousValues {
  id: ID!
  balance: Float!
}

type AccountSubscriptionPayload {
  mutation: MutationType!
  node: Account
  updatedFields: [String!]
  previousValues: AccountPreviousValues
}

input AccountSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [AccountSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [AccountSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AccountSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AccountWhereInput
}

input AccountUpdateInput {
  balance: Float
  User: UserUpdateOneWithoutAccountInput
  Transactions: TransactionUpdateManyWithoutAccountInput
}

input AccountUpdateOneWithoutTransactionsInput {
  create: AccountCreateWithoutTransactionsInput
  connect: AccountWhereUniqueInput
  delete: Boolean
  update: AccountUpdateWithoutTransactionsDataInput
  upsert: AccountUpsertWithoutTransactionsInput
}

input AccountUpdateOneWithoutUserInput {
  create: AccountCreateWithoutUserInput
  connect: AccountWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AccountUpdateWithoutUserDataInput
  upsert: AccountUpsertWithoutUserInput
}

input AccountUpdateWithoutTransactionsDataInput {
  balance: Float
  User: UserUpdateOneWithoutAccountInput
}

input AccountUpdateWithoutUserDataInput {
  balance: Float
  Transactions: TransactionUpdateManyWithoutAccountInput
}

input AccountUpsertWithoutTransactionsInput {
  update: AccountUpdateWithoutTransactionsDataInput!
  create: AccountCreateWithoutTransactionsInput!
}

input AccountUpsertWithoutUserInput {
  update: AccountUpdateWithoutUserDataInput!
  create: AccountCreateWithoutUserInput!
}

input AccountWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [AccountWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [AccountWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AccountWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  balance: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  balance_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  balance_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  balance_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  balance_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  balance_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  balance_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  balance_gte: Float
  User: UserWhereInput
  Transactions_every: TransactionWhereInput
  Transactions_some: TransactionWhereInput
  Transactions_none: TransactionWhereInput
}

input AccountWhereUniqueInput {
  id: ID
}

type AggregateAccount {
  count: Int!
}

type AggregateBeer {
  count: Int!
}

type AggregateCity {
  count: Int!
}

type AggregateComment {
  count: Int!
}

type AggregateCommentType {
  count: Int!
}

type AggregateFile {
  count: Int!
}

type AggregateLetter {
  count: Int!
}

type AggregateLog {
  count: Int!
}

type AggregateLogedIn {
  count: Int!
}

type AggregatePhoto {
  count: Int!
}

type AggregatePlace {
  count: Int!
}

type AggregatePlaceBeer {
  count: Int!
}

type AggregateRoute {
  count: Int!
}

type AggregateTarif {
  count: Int!
}

type AggregateTarifRequest {
  count: Int!
}

type AggregateTopic {
  count: Int!
}

type AggregateTransaction {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateUserGroup {
  count: Int!
}

type AggregateUserTarif {
  count: Int!
}

type BatchPayload {
  # The number of nodes that have been affected by the Batch operation.
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

type Beer implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  beer_id: Int
  name: String
  url_name: String
  description: String
  editor_content: Json
  country: String
  image: String
  num_comments: Int
  num_photos: Int
  manufacturer: String
  region: String
  manufacture_years: String
  container: Int
  alcohol: String
  wort_percent: String
  components: String
  bitter: Int
  type_id: Int
  color: String
  is_request: Int
  rating: Float
  add_user_id: Int
  created_at: Int
  gallery: Json
  places(where: PlaceBeerWhereInput, orderBy: PlaceBeerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PlaceBeer!]
  container_str: String
  uri: String
}

"""
A connection to a list of items.
"""
type BeerConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [BeerEdge]!
  aggregate: AggregateBeer!
}

input BeerCreateInput {
  beer_id: Int
  name: String
  url_name: String
  description: String
  editor_content: Json
  country: String
  image: String
  num_comments: Int
  num_photos: Int
  manufacturer: String
  region: String
  manufacture_years: String
  container: Int
  alcohol: String
  wort_percent: String
  components: String
  bitter: Int
  type_id: Int
  color: String
  is_request: Int
  rating: Float
  add_user_id: Int
  created_at: Int
  gallery: Json
  places: PlaceBeerCreateManyWithoutBeerInput
}

input BeerCreateOneWithoutPlacesInput {
  create: BeerCreateWithoutPlacesInput
  connect: BeerWhereUniqueInput
}

input BeerCreateWithoutPlacesInput {
  beer_id: Int
  name: String
  url_name: String
  description: String
  editor_content: Json
  country: String
  image: String
  num_comments: Int
  num_photos: Int
  manufacturer: String
  region: String
  manufacture_years: String
  container: Int
  alcohol: String
  wort_percent: String
  components: String
  bitter: Int
  type_id: Int
  color: String
  is_request: Int
  rating: Float
  add_user_id: Int
  created_at: Int
  gallery: Json
}

"""
An edge in a connection.
"""
type BeerEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Beer!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum BeerOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  beer_id_ASC
  beer_id_DESC
  name_ASC
  name_DESC
  url_name_ASC
  url_name_DESC
  description_ASC
  description_DESC
  editor_content_ASC
  editor_content_DESC
  country_ASC
  country_DESC
  image_ASC
  image_DESC
  num_comments_ASC
  num_comments_DESC
  num_photos_ASC
  num_photos_DESC
  manufacturer_ASC
  manufacturer_DESC
  region_ASC
  region_DESC
  manufacture_years_ASC
  manufacture_years_DESC
  container_ASC
  container_DESC
  alcohol_ASC
  alcohol_DESC
  wort_percent_ASC
  wort_percent_DESC
  components_ASC
  components_DESC
  bitter_ASC
  bitter_DESC
  type_id_ASC
  type_id_DESC
  color_ASC
  color_DESC
  is_request_ASC
  is_request_DESC
  rating_ASC
  rating_DESC
  add_user_id_ASC
  add_user_id_DESC
  created_at_ASC
  created_at_DESC
  gallery_ASC
  gallery_DESC
}

type BeerPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  beer_id: Int
  name: String
  url_name: String
  description: String
  editor_content: Json
  country: String
  image: String
  num_comments: Int
  num_photos: Int
  manufacturer: String
  region: String
  manufacture_years: String
  container: Int
  alcohol: String
  wort_percent: String
  components: String
  bitter: Int
  type_id: Int
  color: String
  is_request: Int
  rating: Float
  add_user_id: Int
  created_at: Int
  gallery: Json
}

type BeerSubscriptionPayload {
  mutation: MutationType!
  node: Beer
  updatedFields: [String!]
  previousValues: BeerPreviousValues
}

input BeerSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [BeerSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [BeerSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [BeerSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BeerWhereInput
}

input BeerUpdateInput {
  beer_id: Int
  name: String
  url_name: String
  description: String
  editor_content: Json
  country: String
  image: String
  num_comments: Int
  num_photos: Int
  manufacturer: String
  region: String
  manufacture_years: String
  container: Int
  alcohol: String
  wort_percent: String
  components: String
  bitter: Int
  type_id: Int
  color: String
  is_request: Int
  rating: Float
  add_user_id: Int
  created_at: Int
  gallery: Json
  places: PlaceBeerUpdateManyWithoutBeerInput
}

input BeerUpdateOneWithoutPlacesInput {
  create: BeerCreateWithoutPlacesInput
  connect: BeerWhereUniqueInput
  delete: Boolean
  update: BeerUpdateWithoutPlacesDataInput
  upsert: BeerUpsertWithoutPlacesInput
}

input BeerUpdateWithoutPlacesDataInput {
  beer_id: Int
  name: String
  url_name: String
  description: String
  editor_content: Json
  country: String
  image: String
  num_comments: Int
  num_photos: Int
  manufacturer: String
  region: String
  manufacture_years: String
  container: Int
  alcohol: String
  wort_percent: String
  components: String
  bitter: Int
  type_id: Int
  color: String
  is_request: Int
  rating: Float
  add_user_id: Int
  created_at: Int
  gallery: Json
}

input BeerUpsertWithoutPlacesInput {
  update: BeerUpdateWithoutPlacesDataInput!
  create: BeerCreateWithoutPlacesInput!
}

input BeerWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [BeerWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [BeerWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [BeerWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  beer_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  beer_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  beer_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  beer_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  beer_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  beer_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  beer_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  beer_id_gte: Int
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  url_name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  url_name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  url_name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  url_name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  url_name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  url_name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  url_name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  url_name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  url_name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  url_name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  url_name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  url_name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  url_name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  url_name_not_ends_with: String
  description: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  description_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  description_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  description_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  description_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  description_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  description_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  description_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  description_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  country: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  country_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  country_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  country_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  country_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  country_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  country_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  country_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  country_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  country_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  country_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  country_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  country_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  country_not_ends_with: String
  image: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  image_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  image_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  image_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  image_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  image_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  image_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  image_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  image_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  image_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  image_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  image_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  image_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  image_not_ends_with: String
  num_comments: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  num_comments_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  num_comments_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  num_comments_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  num_comments_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  num_comments_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  num_comments_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  num_comments_gte: Int
  num_photos: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  num_photos_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  num_photos_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  num_photos_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  num_photos_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  num_photos_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  num_photos_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  num_photos_gte: Int
  manufacturer: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  manufacturer_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  manufacturer_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  manufacturer_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  manufacturer_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  manufacturer_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  manufacturer_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  manufacturer_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  manufacturer_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  manufacturer_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  manufacturer_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  manufacturer_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  manufacturer_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  manufacturer_not_ends_with: String
  region: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  region_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  region_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  region_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  region_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  region_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  region_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  region_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  region_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  region_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  region_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  region_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  region_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  region_not_ends_with: String
  manufacture_years: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  manufacture_years_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  manufacture_years_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  manufacture_years_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  manufacture_years_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  manufacture_years_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  manufacture_years_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  manufacture_years_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  manufacture_years_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  manufacture_years_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  manufacture_years_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  manufacture_years_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  manufacture_years_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  manufacture_years_not_ends_with: String
  container: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  container_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  container_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  container_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  container_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  container_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  container_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  container_gte: Int
  alcohol: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  alcohol_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  alcohol_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  alcohol_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  alcohol_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  alcohol_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  alcohol_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  alcohol_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  alcohol_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  alcohol_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  alcohol_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  alcohol_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  alcohol_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  alcohol_not_ends_with: String
  wort_percent: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  wort_percent_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  wort_percent_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  wort_percent_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  wort_percent_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  wort_percent_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  wort_percent_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  wort_percent_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  wort_percent_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  wort_percent_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  wort_percent_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  wort_percent_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  wort_percent_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  wort_percent_not_ends_with: String
  components: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  components_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  components_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  components_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  components_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  components_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  components_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  components_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  components_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  components_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  components_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  components_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  components_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  components_not_ends_with: String
  bitter: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  bitter_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  bitter_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  bitter_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  bitter_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  bitter_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  bitter_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  bitter_gte: Int
  type_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  type_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  type_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  type_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  type_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  type_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  type_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  type_id_gte: Int
  color: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  color_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  color_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  color_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  color_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  color_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  color_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  color_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  color_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  color_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  color_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  color_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  color_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  color_not_ends_with: String
  is_request: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  is_request_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  is_request_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  is_request_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  is_request_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  is_request_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  is_request_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  is_request_gte: Int
  rating: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  rating_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  rating_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  rating_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  rating_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  rating_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  rating_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  rating_gte: Float
  add_user_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  add_user_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  add_user_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  add_user_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  add_user_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  add_user_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  add_user_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  add_user_id_gte: Int
  created_at: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  created_at_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  created_at_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  created_at_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  created_at_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  created_at_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  created_at_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  created_at_gte: Int
  places_every: PlaceBeerWhereInput
  places_some: PlaceBeerWhereInput
  places_none: PlaceBeerWhereInput
}

input BeerWhereUniqueInput {
  id: ID
  beer_id: Int
}

type City implements Node {
  id: ID!
  city_id: Int!
  name: String!
  alias: String!
  lat: Float!
  lng: Float!
}

"""
A connection to a list of items.
"""
type CityConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [CityEdge]!
  aggregate: AggregateCity!
}

input CityCreateInput {
  city_id: Int!
  name: String!
  alias: String!
  lat: Float!
  lng: Float!
}

"""
An edge in a connection.
"""
type CityEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: City!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CityOrderByInput {
  id_ASC
  id_DESC
  city_id_ASC
  city_id_DESC
  name_ASC
  name_DESC
  alias_ASC
  alias_DESC
  lat_ASC
  lat_DESC
  lng_ASC
  lng_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CityPreviousValues {
  id: ID!
  city_id: Int!
  name: String!
  alias: String!
  lat: Float!
  lng: Float!
}

type CitySubscriptionPayload {
  mutation: MutationType!
  node: City
  updatedFields: [String!]
  previousValues: CityPreviousValues
}

input CitySubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [CitySubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [CitySubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CitySubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CityWhereInput
}

input CityUpdateInput {
  city_id: Int
  name: String
  alias: String
  lat: Float
  lng: Float
}

input CityWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [CityWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [CityWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CityWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  city_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  city_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  city_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  city_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  city_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  city_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  city_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  city_id_gte: Int
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  alias: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  alias_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  alias_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  alias_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  alias_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  alias_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  alias_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  alias_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  alias_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  alias_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  alias_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  alias_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  alias_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  alias_not_ends_with: String
  lat: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  lat_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  lat_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  lat_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  lat_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  lat_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  lat_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  lat_gte: Float
  lng: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  lng_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  lng_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  lng_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  lng_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  lng_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  lng_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  lng_gte: Float
}

input CityWhereUniqueInput {
  id: ID
  city_id: Int
  alias: String
}

type Comment implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  comment_id: Int
  object_id: Int
  type_id: Int!
  editor_content: Json!
  is_checked: Int!
  name: String
  created_by(where: UserWhereInput): User
  parent: ID
  # custom
  uri: String!
}

"""
A connection to a list of items.
"""
type CommentConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [CommentEdge]!
  aggregate: AggregateComment!
}

input CommentCreateInput {
  comment_id: Int
  object_id: Int
  type_id: Int
  editor_content: Json!
  is_checked: Int
  name: String
  parent: ID
  created_by: UserCreateOneWithoutCommentsInput
}

input CommentCreateManyWithoutCreated_byInput {
  create: [CommentCreateWithoutCreated_byInput!]
  connect: [CommentWhereUniqueInput!]
}

input CommentCreateWithoutCreated_byInput {
  comment_id: Int
  object_id: Int
  type_id: Int
  editor_content: Json!
  is_checked: Int
  name: String
  parent: ID
}

"""
An edge in a connection.
"""
type CommentEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Comment!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CommentOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  comment_id_ASC
  comment_id_DESC
  object_id_ASC
  object_id_DESC
  type_id_ASC
  type_id_DESC
  editor_content_ASC
  editor_content_DESC
  is_checked_ASC
  is_checked_DESC
  name_ASC
  name_DESC
  parent_ASC
  parent_DESC
}

type CommentPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  comment_id: Int
  object_id: Int
  type_id: Int!
  editor_content: Json!
  is_checked: Int!
  name: String
  parent: ID
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment
  updatedFields: [String!]
  previousValues: CommentPreviousValues
}

input CommentSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [CommentSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [CommentSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CommentSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentWhereInput
}

type CommentType implements Node {
  id: ID!
  name: String!
  code: Int!
}

"""
A connection to a list of items.
"""
type CommentTypeConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [CommentTypeEdge]!
  aggregate: AggregateCommentType!
}

input CommentTypeCreateInput {
  name: String!
  code: Int!
}

"""
An edge in a connection.
"""
type CommentTypeEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: CommentType!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum CommentTypeOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  code_ASC
  code_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CommentTypePreviousValues {
  id: ID!
  name: String!
  code: Int!
}

type CommentTypeSubscriptionPayload {
  mutation: MutationType!
  node: CommentType
  updatedFields: [String!]
  previousValues: CommentTypePreviousValues
}

input CommentTypeSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [CommentTypeSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [CommentTypeSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CommentTypeSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CommentTypeWhereInput
}

input CommentTypeUpdateInput {
  name: String
  code: Int
}

input CommentTypeWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [CommentTypeWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [CommentTypeWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CommentTypeWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  code: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  code_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  code_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  code_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  code_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  code_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  code_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  code_gte: Int
}

input CommentTypeWhereUniqueInput {
  id: ID
  name: String
  code: Int
}

input CommentUpdateInput {
  comment_id: Int
  object_id: Int
  type_id: Int
  editor_content: Json
  is_checked: Int
  name: String
  parent: ID
  created_by: UserUpdateOneWithoutCommentsInput
}

input CommentUpdateManyWithoutCreated_byInput {
  create: [CommentCreateWithoutCreated_byInput!]
  connect: [CommentWhereUniqueInput!]
  disconnect: [CommentWhereUniqueInput!]
  delete: [CommentWhereUniqueInput!]
  update: [CommentUpdateWithWhereUniqueWithoutCreated_byInput!]
  upsert: [CommentUpsertWithWhereUniqueWithoutCreated_byInput!]
}

input CommentUpdateWithoutCreated_byDataInput {
  comment_id: Int
  object_id: Int
  type_id: Int
  editor_content: Json
  is_checked: Int
  name: String
  parent: ID
}

input CommentUpdateWithWhereUniqueWithoutCreated_byInput {
  where: CommentWhereUniqueInput!
  data: CommentUpdateWithoutCreated_byDataInput!
}

input CommentUpsertWithWhereUniqueWithoutCreated_byInput {
  where: CommentWhereUniqueInput!
  update: CommentUpdateWithoutCreated_byDataInput!
  create: CommentCreateWithoutCreated_byInput!
}

input CommentWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [CommentWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [CommentWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [CommentWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  comment_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  comment_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  comment_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  comment_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  comment_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  comment_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  comment_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  comment_id_gte: Int
  object_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  object_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  object_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  object_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  object_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  object_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  object_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  object_id_gte: Int
  type_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  type_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  type_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  type_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  type_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  type_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  type_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  type_id_gte: Int
  is_checked: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  is_checked_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  is_checked_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  is_checked_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  is_checked_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  is_checked_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  is_checked_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  is_checked_gte: Int
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  parent: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  parent_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  parent_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  parent_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  parent_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  parent_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  parent_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  parent_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  parent_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  parent_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  parent_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  parent_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  parent_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  parent_not_ends_with: ID
  created_by: UserWhereInput
}

input CommentWhereUniqueInput {
  id: ID
  comment_id: Int
}

scalar DateTime

type File implements Node {
  id: ID!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
  createdby(where: UserWhereInput): User!
  hash: String
}

"""
A connection to a list of items.
"""
type FileConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [FileEdge]!
  aggregate: AggregateFile!
}

input FileCreateInput {
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
  hash: String
  createdby: UserCreateOneWithoutFilesInput!
}

input FileCreateManyWithoutCreatedbyInput {
  create: [FileCreateWithoutCreatedbyInput!]
  connect: [FileWhereUniqueInput!]
}

input FileCreateWithoutCreatedbyInput {
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
  hash: String
}

"""
An edge in a connection.
"""
type FileEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: File!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum FileOrderByInput {
  id_ASC
  id_DESC
  path_ASC
  path_DESC
  filename_ASC
  filename_DESC
  mimetype_ASC
  mimetype_DESC
  encoding_ASC
  encoding_DESC
  hash_ASC
  hash_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type FilePreviousValues {
  id: ID!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
  hash: String
}

type FileSubscriptionPayload {
  mutation: MutationType!
  node: File
  updatedFields: [String!]
  previousValues: FilePreviousValues
}

input FileSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [FileSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [FileSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [FileSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FileWhereInput
}

input FileUpdateInput {
  path: String
  filename: String
  mimetype: String
  encoding: String
  hash: String
  createdby: UserUpdateOneWithoutFilesInput
}

input FileUpdateManyWithoutCreatedbyInput {
  create: [FileCreateWithoutCreatedbyInput!]
  connect: [FileWhereUniqueInput!]
  disconnect: [FileWhereUniqueInput!]
  delete: [FileWhereUniqueInput!]
  update: [FileUpdateWithWhereUniqueWithoutCreatedbyInput!]
  upsert: [FileUpsertWithWhereUniqueWithoutCreatedbyInput!]
}

input FileUpdateWithoutCreatedbyDataInput {
  path: String
  filename: String
  mimetype: String
  encoding: String
  hash: String
}

input FileUpdateWithWhereUniqueWithoutCreatedbyInput {
  where: FileWhereUniqueInput!
  data: FileUpdateWithoutCreatedbyDataInput!
}

input FileUpsertWithWhereUniqueWithoutCreatedbyInput {
  where: FileWhereUniqueInput!
  update: FileUpdateWithoutCreatedbyDataInput!
  create: FileCreateWithoutCreatedbyInput!
}

input FileWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [FileWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [FileWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [FileWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  path: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  path_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  path_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  path_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  path_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  path_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  path_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  path_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  path_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  path_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  path_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  path_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  path_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  path_not_ends_with: String
  filename: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  filename_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  filename_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  filename_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  filename_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  filename_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  filename_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  filename_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  filename_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  filename_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  filename_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  filename_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  filename_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  filename_not_ends_with: String
  mimetype: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  mimetype_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  mimetype_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  mimetype_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  mimetype_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  mimetype_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  mimetype_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  mimetype_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  mimetype_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  mimetype_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  mimetype_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  mimetype_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  mimetype_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  mimetype_not_ends_with: String
  encoding: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  encoding_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  encoding_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  encoding_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  encoding_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  encoding_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  encoding_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  encoding_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  encoding_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  encoding_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  encoding_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  encoding_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  encoding_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  encoding_not_ends_with: String
  hash: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  hash_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  hash_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  hash_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  hash_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  hash_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  hash_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  hash_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  hash_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  hash_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  hash_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  hash_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  hash_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  hash_not_ends_with: String
  createdby: UserWhereInput
}

input FileWhereUniqueInput {
  id: ID
}

"""
Raw JSON value
"""
scalar Json

type Letter implements Node {
  Place(where: PlaceWhereInput): Place
  id: ID!
  email: String!
  subject: String!
  message: String!
  status: LetterStatus!
}

"""
A connection to a list of items.
"""
type LetterConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [LetterEdge]!
  aggregate: AggregateLetter!
}

input LetterCreateInput {
  email: String!
  subject: String!
  message: String!
  status: LetterStatus
  Place: PlaceCreateOneWithoutLettersInput
}

input LetterCreateManyWithoutPlaceInput {
  create: [LetterCreateWithoutPlaceInput!]
  connect: [LetterWhereUniqueInput!]
}

input LetterCreateWithoutPlaceInput {
  email: String!
  subject: String!
  message: String!
  status: LetterStatus
}

"""
An edge in a connection.
"""
type LetterEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Letter!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum LetterOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  subject_ASC
  subject_DESC
  message_ASC
  message_DESC
  status_ASC
  status_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type LetterPreviousValues {
  id: ID!
  email: String!
  subject: String!
  message: String!
  status: LetterStatus!
}

enum LetterStatus {
  Created
  Processing
  Sended
  Error
}

type LetterSubscriptionPayload {
  mutation: MutationType!
  node: Letter
  updatedFields: [String!]
  previousValues: LetterPreviousValues
}

input LetterSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [LetterSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [LetterSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LetterSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: LetterWhereInput
}

input LetterUpdateInput {
  email: String
  subject: String
  message: String
  status: LetterStatus
  Place: PlaceUpdateOneWithoutLettersInput
}

input LetterUpdateManyWithoutPlaceInput {
  create: [LetterCreateWithoutPlaceInput!]
  connect: [LetterWhereUniqueInput!]
  disconnect: [LetterWhereUniqueInput!]
  delete: [LetterWhereUniqueInput!]
  update: [LetterUpdateWithWhereUniqueWithoutPlaceInput!]
  upsert: [LetterUpsertWithWhereUniqueWithoutPlaceInput!]
}

input LetterUpdateWithoutPlaceDataInput {
  email: String
  subject: String
  message: String
  status: LetterStatus
}

input LetterUpdateWithWhereUniqueWithoutPlaceInput {
  where: LetterWhereUniqueInput!
  data: LetterUpdateWithoutPlaceDataInput!
}

input LetterUpsertWithWhereUniqueWithoutPlaceInput {
  where: LetterWhereUniqueInput!
  update: LetterUpdateWithoutPlaceDataInput!
  create: LetterCreateWithoutPlaceInput!
}

input LetterWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [LetterWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [LetterWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LetterWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  email: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  email_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  email_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  email_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  email_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  email_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  email_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  email_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  email_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  subject: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  subject_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  subject_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  subject_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  subject_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  subject_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  subject_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  subject_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  subject_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  subject_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  subject_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  subject_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  subject_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  subject_not_ends_with: String
  message: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  message_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  message_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  message_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  message_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  message_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  message_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  message_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  message_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  message_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  message_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  message_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  message_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  message_not_ends_with: String
  status: LetterStatus
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  status_not: LetterStatus
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  status_in: [LetterStatus!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  status_not_in: [LetterStatus!]
  Place: PlaceWhereInput
}

input LetterWhereUniqueInput {
  id: ID
}

type Log implements Node {
  id: ID!
  level: LogLevel!
  objectType: ID
  message: String!
  stack: String
}

"""
A connection to a list of items.
"""
type LogConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [LogEdge]!
  aggregate: AggregateLog!
}

input LogCreateInput {
  level: LogLevel
  objectType: ID
  message: String!
  stack: String
}

"""
An edge in a connection.
"""
type LogEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Log!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

type LogedIn implements Node {
  id: ID!
  createdAt: DateTime!
  fake: Boolean
  User(where: UserWhereInput): User!
}

"""
A connection to a list of items.
"""
type LogedInConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [LogedInEdge]!
  aggregate: AggregateLogedIn!
}

input LogedInCreateInput {
  fake: Boolean
  User: UserCreateOneWithoutLogedInsInput!
}

input LogedInCreateManyWithoutUserInput {
  create: [LogedInCreateWithoutUserInput!]
  connect: [LogedInWhereUniqueInput!]
}

input LogedInCreateWithoutUserInput {
  fake: Boolean
}

"""
An edge in a connection.
"""
type LogedInEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: LogedIn!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum LogedInOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  fake_ASC
  fake_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type LogedInPreviousValues {
  id: ID!
  createdAt: DateTime!
  fake: Boolean
}

type LogedInSubscriptionPayload {
  mutation: MutationType!
  node: LogedIn
  updatedFields: [String!]
  previousValues: LogedInPreviousValues
}

input LogedInSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [LogedInSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [LogedInSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LogedInSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: LogedInWhereInput
}

input LogedInUpdateInput {
  fake: Boolean
  User: UserUpdateOneWithoutLogedInsInput
}

input LogedInUpdateManyWithoutUserInput {
  create: [LogedInCreateWithoutUserInput!]
  connect: [LogedInWhereUniqueInput!]
  disconnect: [LogedInWhereUniqueInput!]
  delete: [LogedInWhereUniqueInput!]
  update: [LogedInUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [LogedInUpsertWithWhereUniqueWithoutUserInput!]
}

input LogedInUpdateWithoutUserDataInput {
  fake: Boolean
}

input LogedInUpdateWithWhereUniqueWithoutUserInput {
  where: LogedInWhereUniqueInput!
  data: LogedInUpdateWithoutUserDataInput!
}

input LogedInUpsertWithWhereUniqueWithoutUserInput {
  where: LogedInWhereUniqueInput!
  update: LogedInUpdateWithoutUserDataInput!
  create: LogedInCreateWithoutUserInput!
}

input LogedInWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [LogedInWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [LogedInWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LogedInWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  fake: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  fake_not: Boolean
  User: UserWhereInput
}

input LogedInWhereUniqueInput {
  id: ID
}

enum LogLevel {
  Info
  Notice
  Warning
  Error
  Fatal
}

enum LogOrderByInput {
  id_ASC
  id_DESC
  level_ASC
  level_DESC
  objectType_ASC
  objectType_DESC
  message_ASC
  message_DESC
  stack_ASC
  stack_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type LogPreviousValues {
  id: ID!
  level: LogLevel!
  objectType: ID
  message: String!
  stack: String
}

type LogSubscriptionPayload {
  mutation: MutationType!
  node: Log
  updatedFields: [String!]
  previousValues: LogPreviousValues
}

input LogSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [LogSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [LogSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LogSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: LogWhereInput
}

input LogUpdateInput {
  level: LogLevel
  objectType: ID
  message: String
  stack: String
}

input LogWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [LogWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [LogWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [LogWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  level: LogLevel
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  level_not: LogLevel
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  level_in: [LogLevel!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  level_not_in: [LogLevel!]
  objectType: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  objectType_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  objectType_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  objectType_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  objectType_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  objectType_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  objectType_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  objectType_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  objectType_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  objectType_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  objectType_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  objectType_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  objectType_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  objectType_not_ends_with: ID
  message: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  message_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  message_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  message_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  message_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  message_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  message_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  message_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  message_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  message_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  message_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  message_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  message_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  message_not_ends_with: String
  stack: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  stack_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  stack_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  stack_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  stack_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  stack_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  stack_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  stack_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  stack_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  stack_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  stack_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  stack_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  stack_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  stack_not_ends_with: String
}

input LogWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  # The id of the object.
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  # When paginating forwards, are there more items?
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  # When paginating backwards, are there more items?
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  # When paginating backwards, the cursor to continue.
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  # When paginating forwards, the cursor to continue.
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Photo implements Node {
  id: ID!
  photo_id: Int
  user_id: Int
  type_id: Int
  name: String
  description: String
  num_comments: Int
  created_at: DateTime
  updated_at: DateTime
  file_name: String
}

"""
A connection to a list of items.
"""
type PhotoConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [PhotoEdge]!
  aggregate: AggregatePhoto!
}

input PhotoCreateInput {
  photo_id: Int
  user_id: Int
  type_id: Int
  name: String
  description: String
  num_comments: Int
  created_at: DateTime
  updated_at: DateTime
  file_name: String
}

"""
An edge in a connection.
"""
type PhotoEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Photo!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PhotoOrderByInput {
  id_ASC
  id_DESC
  photo_id_ASC
  photo_id_DESC
  user_id_ASC
  user_id_DESC
  type_id_ASC
  type_id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  num_comments_ASC
  num_comments_DESC
  created_at_ASC
  created_at_DESC
  updated_at_ASC
  updated_at_DESC
  file_name_ASC
  file_name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PhotoPreviousValues {
  id: ID!
  photo_id: Int
  user_id: Int
  type_id: Int
  name: String
  description: String
  num_comments: Int
  created_at: DateTime
  updated_at: DateTime
  file_name: String
}

type PhotoSubscriptionPayload {
  mutation: MutationType!
  node: Photo
  updatedFields: [String!]
  previousValues: PhotoPreviousValues
}

input PhotoSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [PhotoSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [PhotoSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PhotoSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PhotoWhereInput
}

input PhotoUpdateInput {
  photo_id: Int
  user_id: Int
  type_id: Int
  name: String
  description: String
  num_comments: Int
  created_at: DateTime
  updated_at: DateTime
  file_name: String
}

input PhotoWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [PhotoWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [PhotoWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PhotoWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  photo_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  photo_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  photo_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  photo_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  photo_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  photo_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  photo_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  photo_id_gte: Int
  user_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  user_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  user_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  user_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  user_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  user_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  user_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  user_id_gte: Int
  type_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  type_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  type_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  type_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  type_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  type_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  type_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  type_id_gte: Int
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  description: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  description_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  description_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  description_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  description_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  description_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  description_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  description_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  description_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  num_comments: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  num_comments_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  num_comments_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  num_comments_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  num_comments_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  num_comments_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  num_comments_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  num_comments_gte: Int
  created_at: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  created_at_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  created_at_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  created_at_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  created_at_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  created_at_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  created_at_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  created_at_gte: DateTime
  updated_at: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  updated_at_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  updated_at_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  updated_at_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  updated_at_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  updated_at_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  updated_at_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  updated_at_gte: DateTime
  file_name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  file_name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  file_name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  file_name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  file_name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  file_name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  file_name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  file_name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  file_name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  file_name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  file_name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  file_name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  file_name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  file_name_not_ends_with: String
}

input PhotoWhereUniqueInput {
  id: ID
  photo_id: Int
}

type Place implements Node {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  place_id: Int
  name: String!
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  beers(where: PlaceBeerWhereInput, orderBy: PlaceBeerOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PlaceBeer!]
  Owner(where: UserWhereInput): User
  Letters(where: LetterWhereInput, orderBy: LetterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Letter!]
  best: Boolean
  is_request: Int
  # Custom
  minPrice: Float
  maxPrice: Float
  uri: String
}

type PlaceBeer implements Node {
  id: ID!
  price: Float
  Place(where: PlaceWhereInput): Place!
  Beer(where: BeerWhereInput): Beer!
}

"""
A connection to a list of items.
"""
type PlaceBeerConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [PlaceBeerEdge]!
  aggregate: AggregatePlaceBeer!
}

input PlaceBeerCreateInput {
  price: Float
  Place: PlaceCreateOneWithoutBeersInput!
  Beer: BeerCreateOneWithoutPlacesInput!
}

input PlaceBeerCreateManyWithoutBeerInput {
  create: [PlaceBeerCreateWithoutBeerInput!]
  connect: [PlaceBeerWhereUniqueInput!]
}

input PlaceBeerCreateManyWithoutPlaceInput {
  create: [PlaceBeerCreateWithoutPlaceInput!]
  connect: [PlaceBeerWhereUniqueInput!]
}

input PlaceBeerCreateWithoutBeerInput {
  price: Float
  Place: PlaceCreateOneWithoutBeersInput!
}

input PlaceBeerCreateWithoutPlaceInput {
  price: Float
  Beer: BeerCreateOneWithoutPlacesInput!
}

"""
An edge in a connection.
"""
type PlaceBeerEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: PlaceBeer!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PlaceBeerOrderByInput {
  id_ASC
  id_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PlaceBeerPreviousValues {
  id: ID!
  price: Float
}

type PlaceBeerSubscriptionPayload {
  mutation: MutationType!
  node: PlaceBeer
  updatedFields: [String!]
  previousValues: PlaceBeerPreviousValues
}

input PlaceBeerSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [PlaceBeerSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [PlaceBeerSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PlaceBeerSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PlaceBeerWhereInput
}

input PlaceBeerUpdateInput {
  price: Float
  Place: PlaceUpdateOneWithoutBeersInput
  Beer: BeerUpdateOneWithoutPlacesInput
}

input PlaceBeerUpdateManyWithoutBeerInput {
  create: [PlaceBeerCreateWithoutBeerInput!]
  connect: [PlaceBeerWhereUniqueInput!]
  disconnect: [PlaceBeerWhereUniqueInput!]
  delete: [PlaceBeerWhereUniqueInput!]
  update: [PlaceBeerUpdateWithWhereUniqueWithoutBeerInput!]
  upsert: [PlaceBeerUpsertWithWhereUniqueWithoutBeerInput!]
}

input PlaceBeerUpdateManyWithoutPlaceInput {
  create: [PlaceBeerCreateWithoutPlaceInput!]
  connect: [PlaceBeerWhereUniqueInput!]
  disconnect: [PlaceBeerWhereUniqueInput!]
  delete: [PlaceBeerWhereUniqueInput!]
  update: [PlaceBeerUpdateWithWhereUniqueWithoutPlaceInput!]
  upsert: [PlaceBeerUpsertWithWhereUniqueWithoutPlaceInput!]
}

input PlaceBeerUpdateWithoutBeerDataInput {
  price: Float
  Place: PlaceUpdateOneWithoutBeersInput
}

input PlaceBeerUpdateWithoutPlaceDataInput {
  price: Float
  Beer: BeerUpdateOneWithoutPlacesInput
}

input PlaceBeerUpdateWithWhereUniqueWithoutBeerInput {
  where: PlaceBeerWhereUniqueInput!
  data: PlaceBeerUpdateWithoutBeerDataInput!
}

input PlaceBeerUpdateWithWhereUniqueWithoutPlaceInput {
  where: PlaceBeerWhereUniqueInput!
  data: PlaceBeerUpdateWithoutPlaceDataInput!
}

input PlaceBeerUpsertWithWhereUniqueWithoutBeerInput {
  where: PlaceBeerWhereUniqueInput!
  update: PlaceBeerUpdateWithoutBeerDataInput!
  create: PlaceBeerCreateWithoutBeerInput!
}

input PlaceBeerUpsertWithWhereUniqueWithoutPlaceInput {
  where: PlaceBeerWhereUniqueInput!
  update: PlaceBeerUpdateWithoutPlaceDataInput!
  create: PlaceBeerCreateWithoutPlaceInput!
}

input PlaceBeerWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [PlaceBeerWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [PlaceBeerWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PlaceBeerWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  price: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  price_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  price_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  price_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  price_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  price_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  price_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  price_gte: Float
  Place: PlaceWhereInput
  Beer: BeerWhereInput
}

input PlaceBeerWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type PlaceConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [PlaceEdge]!
  aggregate: AggregatePlace!
}

input PlaceCreateInput {
  place_id: Int
  name: String!
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  beers: PlaceBeerCreateManyWithoutPlaceInput
  Owner: UserCreateOneWithoutPlacesInput
  Letters: LetterCreateManyWithoutPlaceInput
  # place_id: Int
  # beers: PlaceBeerCreateManyWithoutPlaceInput
   # Owner: UserCreateOneWithoutPlacesInput
   # Letters: LetterCreateManyWithoutPlaceInput
}

input PlaceCreateManyWithoutOwnerInput {
  create: [PlaceCreateWithoutOwnerInput!]
  connect: [PlaceWhereUniqueInput!]
}

input PlaceCreateOneWithoutBeersInput {
  create: PlaceCreateWithoutBeersInput
  connect: PlaceWhereUniqueInput
}

input PlaceCreateOneWithoutLettersInput {
  create: PlaceCreateWithoutLettersInput
  connect: PlaceWhereUniqueInput
  id: ID!
}

input PlaceCreateWithoutBeersInput {
  place_id: Int
  name: String!
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  Owner: UserCreateOneWithoutPlacesInput
  Letters: LetterCreateManyWithoutPlaceInput
}

input PlaceCreateWithoutLettersInput {
  place_id: Int
  name: String!
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  beers: PlaceBeerCreateManyWithoutPlaceInput
  Owner: UserCreateOneWithoutPlacesInput
}

input PlaceCreateWithoutOwnerInput {
  place_id: Int
  name: String!
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  beers: PlaceBeerCreateManyWithoutPlaceInput
  Letters: LetterCreateManyWithoutPlaceInput
}

"""
An edge in a connection.
"""
type PlaceEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Place!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PlaceOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  place_id_ASC
  place_id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  address_ASC
  address_DESC
  lng_ASC
  lng_DESC
  lat_ASC
  lat_DESC
  website_ASC
  website_DESC
  phone_ASC
  phone_DESC
  work_hours_ASC
  work_hours_DESC
  metro_ASC
  metro_DESC
  content_ASC
  content_DESC
  schedules_ASC
  schedules_DESC
  url_name_ASC
  url_name_DESC
  image_ASC
  image_DESC
  gallery_ASC
  gallery_DESC
  is_bar_ASC
  is_bar_DESC
  is_shop_ASC
  is_shop_DESC
  is_brewery_ASC
  is_brewery_DESC
  active_ASC
  active_DESC
  email_ASC
  email_DESC
  best_ASC
  best_DESC
  is_request_ASC
  is_request_DESC
}

type PlacePreviousValues {
  id: ID!
  updatedAt: DateTime!
  createdAt: DateTime!
  place_id: Int
  name: String!
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
}

type PlaceSubscriptionPayload {
  mutation: MutationType!
  node: Place
  updatedFields: [String!]
  previousValues: PlacePreviousValues
}

input PlaceSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [PlaceSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [PlaceSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PlaceSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PlaceWhereInput
}

input PlaceUpdateInput {
  place_id: Int
  name: String
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  beers: PlaceBeerUpdateManyWithoutPlaceInput
  Owner: UserUpdateOneWithoutPlacesInput
  Letters: LetterUpdateManyWithoutPlaceInput
  # place_id: Int
  # beers: PlaceBeerUpdateManyWithoutPlaceInput
  # Letters: LetterUpdateManyWithoutPlaceInput
}

input PlaceUpdateManyWithoutOwnerInput {
  create: [PlaceCreateWithoutOwnerInput!]
  connect: [PlaceWhereUniqueInput!]
  disconnect: [PlaceWhereUniqueInput!]
  delete: [PlaceWhereUniqueInput!]
  update: [PlaceUpdateWithWhereUniqueWithoutOwnerInput!]
  upsert: [PlaceUpsertWithWhereUniqueWithoutOwnerInput!]
}

input PlaceUpdateOneWithoutBeersInput {
  create: PlaceCreateWithoutBeersInput
  connect: PlaceWhereUniqueInput
  delete: Boolean
  update: PlaceUpdateWithoutBeersDataInput
  upsert: PlaceUpsertWithoutBeersInput
}

input PlaceUpdateOneWithoutLettersInput {
  create: PlaceCreateWithoutLettersInput
  connect: PlaceWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: PlaceUpdateWithoutLettersDataInput
  upsert: PlaceUpsertWithoutLettersInput
}

input PlaceUpdateWithoutBeersDataInput {
  place_id: Int
  name: String
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  Owner: UserUpdateOneWithoutPlacesInput
  Letters: LetterUpdateManyWithoutPlaceInput
}

input PlaceUpdateWithoutLettersDataInput {
  place_id: Int
  name: String
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  beers: PlaceBeerUpdateManyWithoutPlaceInput
  Owner: UserUpdateOneWithoutPlacesInput
}

input PlaceUpdateWithoutOwnerDataInput {
  place_id: Int
  name: String
  description: String
  address: String
  lng: Float
  lat: Float
  website: String
  phone: String
  work_hours: String
  metro: String
  content: Json
  schedules: Json
  url_name: String
  image: String
  gallery: Json
  is_bar: Boolean
  is_shop: Boolean
  is_brewery: Boolean
  active: Boolean
  email: String
  best: Boolean
  is_request: Int
  beers: PlaceBeerUpdateManyWithoutPlaceInput
  Letters: LetterUpdateManyWithoutPlaceInput
}

input PlaceUpdateWithWhereUniqueWithoutOwnerInput {
  where: PlaceWhereUniqueInput!
  data: PlaceUpdateWithoutOwnerDataInput!
}

input PlaceUpsertWithoutBeersInput {
  update: PlaceUpdateWithoutBeersDataInput!
  create: PlaceCreateWithoutBeersInput!
}

input PlaceUpsertWithoutLettersInput {
  update: PlaceUpdateWithoutLettersDataInput!
  create: PlaceCreateWithoutLettersInput!
}

input PlaceUpsertWithWhereUniqueWithoutOwnerInput {
  where: PlaceWhereUniqueInput!
  update: PlaceUpdateWithoutOwnerDataInput!
  create: PlaceCreateWithoutOwnerInput!
}

input PlaceWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [PlaceWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [PlaceWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [PlaceWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  updatedAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  place_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  place_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  place_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  place_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  place_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  place_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  place_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  place_id_gte: Int
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  description: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  description_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  description_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  description_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  description_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  description_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  description_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  description_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  description_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  address: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  address_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  address_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  address_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  address_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  address_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  address_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  address_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  address_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  address_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  address_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  address_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  address_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  address_not_ends_with: String
  lng: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  lng_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  lng_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  lng_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  lng_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  lng_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  lng_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  lng_gte: Float
  lat: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  lat_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  lat_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  lat_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  lat_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  lat_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  lat_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  lat_gte: Float
  website: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  website_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  website_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  website_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  website_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  website_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  website_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  website_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  website_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  website_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  website_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  website_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  website_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  website_not_ends_with: String
  phone: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  phone_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  phone_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  phone_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  phone_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  phone_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  phone_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  phone_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  phone_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  phone_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  phone_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  phone_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  phone_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  phone_not_ends_with: String
  work_hours: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  work_hours_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  work_hours_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  work_hours_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  work_hours_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  work_hours_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  work_hours_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  work_hours_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  work_hours_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  work_hours_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  work_hours_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  work_hours_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  work_hours_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  work_hours_not_ends_with: String
  metro: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  metro_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  metro_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  metro_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  metro_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  metro_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  metro_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  metro_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  metro_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  metro_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  metro_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  metro_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  metro_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  metro_not_ends_with: String
  url_name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  url_name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  url_name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  url_name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  url_name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  url_name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  url_name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  url_name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  url_name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  url_name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  url_name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  url_name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  url_name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  url_name_not_ends_with: String
  image: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  image_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  image_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  image_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  image_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  image_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  image_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  image_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  image_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  image_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  image_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  image_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  image_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  image_not_ends_with: String
  is_bar: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  is_bar_not: Boolean
  is_shop: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  is_shop_not: Boolean
  is_brewery: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  is_brewery_not: Boolean
  active: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  active_not: Boolean
  email: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  email_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  email_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  email_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  email_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  email_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  email_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  email_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  email_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  best: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  best_not: Boolean
  is_request: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  is_request_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  is_request_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  is_request_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  is_request_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  is_request_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  is_request_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  is_request_gte: Int
  beers_every: PlaceBeerWhereInput
  beers_some: PlaceBeerWhereInput
  beers_none: PlaceBeerWhereInput
  Owner: UserWhereInput
  Letters_every: LetterWhereInput
  Letters_some: LetterWhereInput
  Letters_none: LetterWhereInput
}

input PlaceWhereUniqueInput {
  id: ID
  place_id: Int
}

type Route implements Node {
  id: ID!
  name: String
  path: String!
  exact: Boolean!
  component: RouteComponent!
  Parent(where: RouteWhereInput): Route
  Childs(where: RouteWhereInput, orderBy: RouteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Route!]
}

enum RouteComponent {
  Resource
}

"""
A connection to a list of items.
"""
type RouteConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [RouteEdge]!
  aggregate: AggregateRoute!
}

input RouteCreateInput {
  name: String
  path: String!
  exact: Boolean
  component: RouteComponent!
  Parent: RouteCreateOneWithoutChildsInput
  Childs: RouteCreateManyWithoutParentInput
}

input RouteCreateManyWithoutParentInput {
  create: [RouteCreateWithoutParentInput!]
  connect: [RouteWhereUniqueInput!]
}

input RouteCreateOneWithoutChildsInput {
  create: RouteCreateWithoutChildsInput
  connect: RouteWhereUniqueInput
}

input RouteCreateWithoutChildsInput {
  name: String
  path: String!
  exact: Boolean
  component: RouteComponent!
  Parent: RouteCreateOneWithoutChildsInput
}

input RouteCreateWithoutParentInput {
  name: String
  path: String!
  exact: Boolean
  component: RouteComponent!
  Childs: RouteCreateManyWithoutParentInput
}

"""
An edge in a connection.
"""
type RouteEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Route!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum RouteOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  path_ASC
  path_DESC
  exact_ASC
  exact_DESC
  component_ASC
  component_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type RoutePreviousValues {
  id: ID!
  name: String
  path: String!
  exact: Boolean!
  component: RouteComponent!
}

type RouteSubscriptionPayload {
  mutation: MutationType!
  node: Route
  updatedFields: [String!]
  previousValues: RoutePreviousValues
}

input RouteSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [RouteSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [RouteSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RouteSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: RouteWhereInput
}

input RouteUpdateInput {
  name: String
  path: String
  exact: Boolean
  component: RouteComponent
  Parent: RouteUpdateOneWithoutChildsInput
  Childs: RouteUpdateManyWithoutParentInput
}

input RouteUpdateManyWithoutParentInput {
  create: [RouteCreateWithoutParentInput!]
  connect: [RouteWhereUniqueInput!]
  disconnect: [RouteWhereUniqueInput!]
  delete: [RouteWhereUniqueInput!]
  update: [RouteUpdateWithWhereUniqueWithoutParentInput!]
  upsert: [RouteUpsertWithWhereUniqueWithoutParentInput!]
}

input RouteUpdateOneWithoutChildsInput {
  create: RouteCreateWithoutChildsInput
  connect: RouteWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: RouteUpdateWithoutChildsDataInput
  upsert: RouteUpsertWithoutChildsInput
}

input RouteUpdateWithoutChildsDataInput {
  name: String
  path: String
  exact: Boolean
  component: RouteComponent
  Parent: RouteUpdateOneWithoutChildsInput
}

input RouteUpdateWithoutParentDataInput {
  name: String
  path: String
  exact: Boolean
  component: RouteComponent
  Childs: RouteUpdateManyWithoutParentInput
}

input RouteUpdateWithWhereUniqueWithoutParentInput {
  where: RouteWhereUniqueInput!
  data: RouteUpdateWithoutParentDataInput!
}

input RouteUpsertWithoutChildsInput {
  update: RouteUpdateWithoutChildsDataInput!
  create: RouteCreateWithoutChildsInput!
}

input RouteUpsertWithWhereUniqueWithoutParentInput {
  where: RouteWhereUniqueInput!
  update: RouteUpdateWithoutParentDataInput!
  create: RouteCreateWithoutParentInput!
}

input RouteWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [RouteWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [RouteWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RouteWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  path: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  path_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  path_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  path_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  path_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  path_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  path_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  path_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  path_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  path_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  path_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  path_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  path_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  path_not_ends_with: String
  exact: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  exact_not: Boolean
  component: RouteComponent
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  component_not: RouteComponent
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  component_in: [RouteComponent!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  component_not_in: [RouteComponent!]
  Parent: RouteWhereInput
  Childs_every: RouteWhereInput
  Childs_some: RouteWhereInput
  Childs_none: RouteWhereInput
}

input RouteWhereUniqueInput {
  id: ID
  path: String
}

type Tarif implements Node {
  id: ID!
  name: String!
  active: Boolean
  maxPriceItems: Int
  price: Float
  UserTarifs(where: UserTarifWhereInput, orderBy: UserTarifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserTarif!]
  allowIcon: Boolean
  allowBanner: Boolean
}

"""
A connection to a list of items.
"""
type TarifConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [TarifEdge]!
  aggregate: AggregateTarif!
}

input TarifCreateInput {
  name: String!
  active: Boolean
  maxPriceItems: Int
  price: Float
  allowIcon: Boolean
  allowBanner: Boolean
  UserTarifs: UserTarifCreateManyWithoutTarifInput
}

input TarifCreateOneInput {
  create: TarifCreateInput
  connect: TarifWhereUniqueInput
}

input TarifCreateOneWithoutUserTarifsInput {
  create: TarifCreateWithoutUserTarifsInput
  connect: TarifWhereUniqueInput
  # create: TarifCreateWithoutUserTarifsInput
}

input TarifCreateWithoutUserTarifsInput {
  name: String!
  active: Boolean
  maxPriceItems: Int
  price: Float
  allowIcon: Boolean
  allowBanner: Boolean
}

"""
An edge in a connection.
"""
type TarifEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Tarif!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TarifOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  active_ASC
  active_DESC
  maxPriceItems_ASC
  maxPriceItems_DESC
  price_ASC
  price_DESC
  allowIcon_ASC
  allowIcon_DESC
  allowBanner_ASC
  allowBanner_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type TarifPreviousValues {
  id: ID!
  name: String!
  active: Boolean
  maxPriceItems: Int
  price: Float
  allowIcon: Boolean
  allowBanner: Boolean
}

type TarifRequest implements Node {
  id: ID!
  User(where: UserWhereInput): User!
  Tarif(where: TarifWhereInput): Tarif!
  createdAt: DateTime!
  executed: Boolean!
}

"""
A connection to a list of items.
"""
type TarifRequestConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [TarifRequestEdge]!
  aggregate: AggregateTarifRequest!
}

input TarifRequestCreateInput {
  executed: Boolean
  User: UserCreateOneInput!
  Tarif: TarifCreateOneInput!
}

"""
An edge in a connection.
"""
type TarifRequestEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: TarifRequest!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TarifRequestOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  executed_ASC
  executed_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TarifRequestPreviousValues {
  id: ID!
  createdAt: DateTime!
  executed: Boolean!
}

type TarifRequestSubscriptionPayload {
  mutation: MutationType!
  node: TarifRequest
  updatedFields: [String!]
  previousValues: TarifRequestPreviousValues
}

input TarifRequestSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TarifRequestSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TarifRequestSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TarifRequestSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TarifRequestWhereInput
}

input TarifRequestUpdateInput {
  executed: Boolean
  User: UserUpdateOneInput
  Tarif: TarifUpdateOneInput
}

input TarifRequestWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TarifRequestWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TarifRequestWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TarifRequestWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  executed: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  executed_not: Boolean
  User: UserWhereInput
  Tarif: TarifWhereInput
}

input TarifRequestWhereUniqueInput {
  id: ID
}

type TarifSubscriptionPayload {
  mutation: MutationType!
  node: Tarif
  updatedFields: [String!]
  previousValues: TarifPreviousValues
}

input TarifSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TarifSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TarifSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TarifSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TarifWhereInput
}

input TarifUpdateDataInput {
  name: String
  active: Boolean
  maxPriceItems: Int
  price: Float
  allowIcon: Boolean
  allowBanner: Boolean
  UserTarifs: UserTarifUpdateManyWithoutTarifInput
}

input TarifUpdateInput {
  name: String
  active: Boolean
  maxPriceItems: Int
  price: Float
  allowIcon: Boolean
  allowBanner: Boolean
  UserTarifs: UserTarifUpdateManyWithoutTarifInput
}

input TarifUpdateOneInput {
  create: TarifCreateInput
  connect: TarifWhereUniqueInput
  delete: Boolean
  update: TarifUpdateDataInput
  upsert: TarifUpsertNestedInput
}

input TarifUpdateOneWithoutUserTarifsInput {
  create: TarifCreateWithoutUserTarifsInput
  connect: TarifWhereUniqueInput
  delete: Boolean
  update: TarifUpdateWithoutUserTarifsDataInput
  upsert: TarifUpsertWithoutUserTarifsInput
}

input TarifUpdateWithoutUserTarifsDataInput {
  name: String
  active: Boolean
  maxPriceItems: Int
  price: Float
  allowIcon: Boolean
  allowBanner: Boolean
}

input TarifUpsertNestedInput {
  update: TarifUpdateDataInput!
  create: TarifCreateInput!
}

input TarifUpsertWithoutUserTarifsInput {
  update: TarifUpdateWithoutUserTarifsDataInput!
  create: TarifCreateWithoutUserTarifsInput!
}

input TarifWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TarifWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TarifWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TarifWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  active: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  active_not: Boolean
  maxPriceItems: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  maxPriceItems_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  maxPriceItems_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  maxPriceItems_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  maxPriceItems_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  maxPriceItems_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  maxPriceItems_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  maxPriceItems_gte: Int
  price: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  price_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  price_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  price_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  price_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  price_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  price_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  price_gte: Float
  allowIcon: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  allowIcon_not: Boolean
  allowBanner: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  allowBanner_not: Boolean
  UserTarifs_every: UserTarifWhereInput
  UserTarifs_some: UserTarifWhereInput
  UserTarifs_none: UserTarifWhereInput
}

input TarifWhereUniqueInput {
  id: ID
}

type Topic implements Node {
  id: ID!
  topic_id: Int
  updatedAt: DateTime!
  createdAt: DateTime!
  created_at: DateTime!
  created_by(where: UserWhereInput): User!
  name: String!
  editor_content: Json
  url_name: String
  type_id: Int!
  published: Boolean
  description: String
  # custom
  uri: String!
}

"""
A connection to a list of items.
"""
type TopicConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [TopicEdge]!
  aggregate: AggregateTopic!
}

input TopicCreateInput {
  topic_id: Int
  created_at: DateTime!
  name: String!
  editor_content: Json
  url_name: String
  type_id: Int!
  published: Boolean
  description: String
  created_by: UserCreateOneWithoutTopicsInput!
}

input TopicCreateManyWithoutCreated_byInput {
  create: [TopicCreateWithoutCreated_byInput!]
  connect: [TopicWhereUniqueInput!]
}

input TopicCreateWithoutCreated_byInput {
  topic_id: Int
  created_at: DateTime!
  name: String!
  editor_content: Json
  url_name: String
  type_id: Int!
  published: Boolean
  description: String
}

"""
An edge in a connection.
"""
type TopicEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Topic!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TopicOrderByInput {
  id_ASC
  id_DESC
  topic_id_ASC
  topic_id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
  created_at_ASC
  created_at_DESC
  name_ASC
  name_DESC
  editor_content_ASC
  editor_content_DESC
  url_name_ASC
  url_name_DESC
  type_id_ASC
  type_id_DESC
  published_ASC
  published_DESC
  description_ASC
  description_DESC
}

type TopicPreviousValues {
  id: ID!
  topic_id: Int
  updatedAt: DateTime!
  createdAt: DateTime!
  created_at: DateTime!
  name: String!
  editor_content: Json
  url_name: String
  type_id: Int!
  published: Boolean
  description: String
}

type TopicSubscriptionPayload {
  mutation: MutationType!
  node: Topic
  updatedFields: [String!]
  previousValues: TopicPreviousValues
}

input TopicSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TopicSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TopicSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TopicSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TopicWhereInput
}

input TopicUpdateInput {
  topic_id: Int
  created_at: DateTime
  name: String
  editor_content: Json
  url_name: String
  type_id: Int
  published: Boolean
  description: String
  created_by: UserUpdateOneWithoutTopicsInput
}

input TopicUpdateManyWithoutCreated_byInput {
  create: [TopicCreateWithoutCreated_byInput!]
  connect: [TopicWhereUniqueInput!]
  disconnect: [TopicWhereUniqueInput!]
  delete: [TopicWhereUniqueInput!]
  update: [TopicUpdateWithWhereUniqueWithoutCreated_byInput!]
  upsert: [TopicUpsertWithWhereUniqueWithoutCreated_byInput!]
}

input TopicUpdateWithoutCreated_byDataInput {
  topic_id: Int
  created_at: DateTime
  name: String
  editor_content: Json
  url_name: String
  type_id: Int
  published: Boolean
  description: String
}

input TopicUpdateWithWhereUniqueWithoutCreated_byInput {
  where: TopicWhereUniqueInput!
  data: TopicUpdateWithoutCreated_byDataInput!
}

input TopicUpsertWithWhereUniqueWithoutCreated_byInput {
  where: TopicWhereUniqueInput!
  update: TopicUpdateWithoutCreated_byDataInput!
  create: TopicCreateWithoutCreated_byInput!
}

input TopicWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TopicWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TopicWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TopicWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  topic_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  topic_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  topic_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  topic_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  topic_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  topic_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  topic_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  topic_id_gte: Int
  updatedAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  created_at: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  created_at_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  created_at_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  created_at_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  created_at_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  created_at_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  created_at_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  created_at_gte: DateTime
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  url_name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  url_name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  url_name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  url_name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  url_name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  url_name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  url_name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  url_name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  url_name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  url_name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  url_name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  url_name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  url_name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  url_name_not_ends_with: String
  type_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  type_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  type_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  type_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  type_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  type_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  type_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  type_id_gte: Int
  published: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  published_not: Boolean
  description: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  description_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  description_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  description_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  description_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  description_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  description_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  description_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  description_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  created_by: UserWhereInput
}

input TopicWhereUniqueInput {
  id: ID
  topic_id: Int
  url_name: String
}

type Transaction implements Node {
  id: ID!
  createdAt: DateTime!
  amount: Float!
  Account(where: AccountWhereInput): Account!
  CreatedBy(where: UserWhereInput): User!
}

"""
A connection to a list of items.
"""
type TransactionConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [TransactionEdge]!
  aggregate: AggregateTransaction!
}

input TransactionCreateInput {
  amount: Float!
  Account: AccountCreateOneWithoutTransactionsInput!
  CreatedBy: UserCreateOneInput!
}

input TransactionCreateManyWithoutAccountInput {
  create: [TransactionCreateWithoutAccountInput!]
  connect: [TransactionWhereUniqueInput!]
}

input TransactionCreateWithoutAccountInput {
  amount: Float!
  CreatedBy: UserCreateOneInput!
}

"""
An edge in a connection.
"""
type TransactionEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: Transaction!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TransactionOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  amount_ASC
  amount_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TransactionPreviousValues {
  id: ID!
  createdAt: DateTime!
  amount: Float!
}

type TransactionSubscriptionPayload {
  mutation: MutationType!
  node: Transaction
  updatedFields: [String!]
  previousValues: TransactionPreviousValues
}

input TransactionSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TransactionSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TransactionSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TransactionSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TransactionWhereInput
}

input TransactionUpdateInput {
  amount: Float
  Account: AccountUpdateOneWithoutTransactionsInput
  CreatedBy: UserUpdateOneInput
}

input TransactionUpdateManyWithoutAccountInput {
  create: [TransactionCreateWithoutAccountInput!]
  connect: [TransactionWhereUniqueInput!]
  disconnect: [TransactionWhereUniqueInput!]
  delete: [TransactionWhereUniqueInput!]
  update: [TransactionUpdateWithWhereUniqueWithoutAccountInput!]
  upsert: [TransactionUpsertWithWhereUniqueWithoutAccountInput!]
}

input TransactionUpdateWithoutAccountDataInput {
  amount: Float
  CreatedBy: UserUpdateOneInput
}

input TransactionUpdateWithWhereUniqueWithoutAccountInput {
  where: TransactionWhereUniqueInput!
  data: TransactionUpdateWithoutAccountDataInput!
}

input TransactionUpsertWithWhereUniqueWithoutAccountInput {
  where: TransactionWhereUniqueInput!
  update: TransactionUpdateWithoutAccountDataInput!
  create: TransactionCreateWithoutAccountInput!
}

input TransactionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [TransactionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [TransactionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [TransactionWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  amount: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  amount_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  amount_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  amount_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  amount_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  amount_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  amount_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  amount_gte: Float
  Account: AccountWhereInput
  CreatedBy: UserWhereInput
}

input TransactionWhereUniqueInput {
  id: ID
}

type User implements Node {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  topics(where: TopicWhereInput, orderBy: TopicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Topic!]
  comments(where: CommentWhereInput, orderBy: CommentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Comment!]
  Tarifs(where: UserTarifWhereInput, orderBy: UserTarifOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserTarif!]
  Account(where: AccountWhereInput): Account
  Places(where: PlaceWhereInput, orderBy: PlaceOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Place!]
  sudo: Boolean
  id: ID!
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  files(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File!]
  active: Boolean
  activated: Boolean
  deleted: Boolean
  Groups(where: UserGroupWhereInput, orderBy: UserGroupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserGroup!]
  CreatedUsers(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  CreatedBy(where: UserWhereInput): User
  LogedIns(where: LogedInWhereInput, orderBy: LogedInOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [LogedIn!]
  hasEmail: Boolean!
  hasPhone: Boolean!
}

"""
A connection to a list of items.
"""
type UserConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateManyWithoutCreatedByInput {
  create: [UserCreateWithoutCreatedByInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutGroupsInput {
  create: [UserCreateWithoutGroupsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  # create: UserCreateInput
}

input UserCreateOneWithoutAccountInput {
  create: UserCreateWithoutAccountInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCommentsInput {
  create: UserCreateWithoutCommentsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCreatedUsersInput {
  create: UserCreateWithoutCreatedUsersInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutFilesInput {
  create: UserCreateWithoutFilesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutLogedInsInput {
  create: UserCreateWithoutLogedInsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutPlacesInput {
  create: UserCreateWithoutPlacesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutTarifsInput {
  create: UserCreateWithoutTarifsInput
  connect: UserWhereUniqueInput
  # create: UserCreateWithoutTarifsInput
}

input UserCreateOneWithoutTopicsInput {
  create: UserCreateWithoutTopicsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAccountInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutCommentsInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutCreatedByInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutCreatedUsersInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutFilesInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutGroupsInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutLogedInsInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
}

input UserCreateWithoutPlacesInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutTarifsInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicCreateManyWithoutCreated_byInput
  comments: CommentCreateManyWithoutCreated_byInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

input UserCreateWithoutTopicsInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  comments: CommentCreateManyWithoutCreated_byInput
  Tarifs: UserTarifCreateManyWithoutUserInput
  Account: AccountCreateOneWithoutUserInput
  Places: PlaceCreateManyWithoutOwnerInput
  files: FileCreateManyWithoutCreatedbyInput
  Groups: UserGroupCreateManyWithoutUsersInput
  CreatedUsers: UserCreateManyWithoutCreatedByInput
  CreatedBy: UserCreateOneWithoutCreatedUsersInput
  LogedIns: LogedInCreateManyWithoutUserInput
}

"""
An edge in a connection.
"""
type UserEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: User!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

type UserGroup implements Node {
  id: ID!
  name: String!
  Users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
}

"""
A connection to a list of items.
"""
type UserGroupConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [UserGroupEdge]!
  aggregate: AggregateUserGroup!
}

input UserGroupCreateInput {
  name: String!
  Users: UserCreateManyWithoutGroupsInput
}

input UserGroupCreateManyWithoutUsersInput {
  create: [UserGroupCreateWithoutUsersInput!]
  connect: [UserGroupWhereUniqueInput!]
}

input UserGroupCreateWithoutUsersInput {
  name: String!
}

"""
An edge in a connection.
"""
type UserGroupEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: UserGroup!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserGroupOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserGroupPreviousValues {
  id: ID!
  name: String!
}

type UserGroupSubscriptionPayload {
  mutation: MutationType!
  node: UserGroup
  updatedFields: [String!]
  previousValues: UserGroupPreviousValues
}

input UserGroupSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [UserGroupSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [UserGroupSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserGroupSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserGroupWhereInput
}

input UserGroupUpdateInput {
  name: String
  Users: UserUpdateManyWithoutGroupsInput
}

input UserGroupUpdateManyWithoutUsersInput {
  create: [UserGroupCreateWithoutUsersInput!]
  connect: [UserGroupWhereUniqueInput!]
  disconnect: [UserGroupWhereUniqueInput!]
  delete: [UserGroupWhereUniqueInput!]
  update: [UserGroupUpdateWithWhereUniqueWithoutUsersInput!]
  upsert: [UserGroupUpsertWithWhereUniqueWithoutUsersInput!]
}

input UserGroupUpdateWithoutUsersDataInput {
  name: String
}

input UserGroupUpdateWithWhereUniqueWithoutUsersInput {
  where: UserGroupWhereUniqueInput!
  data: UserGroupUpdateWithoutUsersDataInput!
}

input UserGroupUpsertWithWhereUniqueWithoutUsersInput {
  where: UserGroupWhereUniqueInput!
  update: UserGroupUpdateWithoutUsersDataInput!
  create: UserGroupCreateWithoutUsersInput!
}

input UserGroupWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [UserGroupWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [UserGroupWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserGroupWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  Users_every: UserWhereInput
  Users_some: UserWhereInput
  Users_none: UserWhereInput
}

input UserGroupWhereUniqueInput {
  id: ID
  name: String
}

enum UserOrderByInput {
  user_id_ASC
  user_id_DESC
  first_name_ASC
  first_name_DESC
  middle_name_ASC
  middle_name_DESC
  last_name_ASC
  last_name_DESC
  fullname_ASC
  fullname_DESC
  image_ASC
  image_DESC
  gender_ASC
  gender_DESC
  birth_date_ASC
  birth_date_DESC
  country_id_ASC
  country_id_DESC
  region_id_ASC
  region_id_DESC
  city_id_ASC
  city_id_DESC
  status_ASC
  status_DESC
  timezone_ASC
  timezone_DESC
  language_id_ASC
  language_id_DESC
  num_blog_posts_ASC
  num_blog_posts_DESC
  last_ASC
  last_DESC
  created_at_ASC
  created_at_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  notification_ASC
  notification_DESC
  icq_ASC
  icq_DESC
  www_ASC
  www_DESC
  contact_email_ASC
  contact_email_DESC
  mobile_phone_ASC
  mobile_phone_DESC
  home_phone_ASC
  home_phone_DESC
  about_ASC
  about_DESC
  experience_ASC
  experience_DESC
  job_title_ASC
  job_title_DESC
  work_place_ASC
  work_place_DESC
  ip_ASC
  ip_DESC
  confirmation_code_ASC
  confirmation_code_DESC
  rating_ASC
  rating_DESC
  etherwallet_ASC
  etherwallet_DESC
  photo_ASC
  photo_DESC
  sudo_ASC
  sudo_DESC
  id_ASC
  id_DESC
  username_ASC
  username_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  showEmail_ASC
  showEmail_DESC
  showPhone_ASC
  showPhone_DESC
  password_ASC
  password_DESC
  address_ASC
  address_DESC
  active_ASC
  active_DESC
  activated_ASC
  activated_DESC
  deleted_ASC
  deleted_DESC
}

type UserPreviousValues {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  id: ID!
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

type UserTarif implements Node {
  id: ID!
  User(where: UserWhereInput): User!
  Tarif(where: TarifWhereInput): Tarif!
  createdAt: DateTime!
  dateTill: DateTime
}

"""
A connection to a list of items.
"""
type UserTarifConnection {
  # Information to aid in pagination.
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  # A list of edges.
  """
  A list of edges.
  """
  edges: [UserTarifEdge]!
  aggregate: AggregateUserTarif!
}

input UserTarifCreateInput {
  dateTill: DateTime
  User: UserCreateOneWithoutTarifsInput!
  Tarif: TarifCreateOneWithoutUserTarifsInput!
}

input UserTarifCreateManyWithoutTarifInput {
  create: [UserTarifCreateWithoutTarifInput!]
  connect: [UserTarifWhereUniqueInput!]
}

input UserTarifCreateManyWithoutUserInput {
  create: [UserTarifCreateWithoutUserInput!]
  connect: [UserTarifWhereUniqueInput!]
}

input UserTarifCreateWithoutTarifInput {
  dateTill: DateTime
  User: UserCreateOneWithoutTarifsInput!
}

input UserTarifCreateWithoutUserInput {
  dateTill: DateTime
  Tarif: TarifCreateOneWithoutUserTarifsInput!
}

"""
An edge in a connection.
"""
type UserTarifEdge {
  # The item at the end of the edge.
  """
  The item at the end of the edge.
  """
  node: UserTarif!
  # A cursor for use in pagination.
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserTarifOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  dateTill_ASC
  dateTill_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserTarifPreviousValues {
  id: ID!
  createdAt: DateTime!
  dateTill: DateTime
}

type UserTarifSubscriptionPayload {
  mutation: MutationType!
  node: UserTarif
  updatedFields: [String!]
  previousValues: UserTarifPreviousValues
}

input UserTarifSubscriptionWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [UserTarifSubscriptionWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [UserTarifSubscriptionWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserTarifSubscriptionWhereInput!]
  # The subscription event gets dispatched when it's listed in mutation_in
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  # The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  # The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  # The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserTarifWhereInput
}

input UserTarifUpdateInput {
  dateTill: DateTime
  User: UserUpdateOneWithoutTarifsInput
  Tarif: TarifUpdateOneWithoutUserTarifsInput
}

input UserTarifUpdateManyWithoutTarifInput {
  create: [UserTarifCreateWithoutTarifInput!]
  connect: [UserTarifWhereUniqueInput!]
  disconnect: [UserTarifWhereUniqueInput!]
  delete: [UserTarifWhereUniqueInput!]
  update: [UserTarifUpdateWithWhereUniqueWithoutTarifInput!]
  upsert: [UserTarifUpsertWithWhereUniqueWithoutTarifInput!]
}

input UserTarifUpdateManyWithoutUserInput {
  create: [UserTarifCreateWithoutUserInput!]
  connect: [UserTarifWhereUniqueInput!]
  disconnect: [UserTarifWhereUniqueInput!]
  delete: [UserTarifWhereUniqueInput!]
  update: [UserTarifUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [UserTarifUpsertWithWhereUniqueWithoutUserInput!]
}

input UserTarifUpdateWithoutTarifDataInput {
  dateTill: DateTime
  User: UserUpdateOneWithoutTarifsInput
}

input UserTarifUpdateWithoutUserDataInput {
  dateTill: DateTime
  Tarif: TarifUpdateOneWithoutUserTarifsInput
}

input UserTarifUpdateWithWhereUniqueWithoutTarifInput {
  where: UserTarifWhereUniqueInput!
  data: UserTarifUpdateWithoutTarifDataInput!
}

input UserTarifUpdateWithWhereUniqueWithoutUserInput {
  where: UserTarifWhereUniqueInput!
  data: UserTarifUpdateWithoutUserDataInput!
}

input UserTarifUpsertWithWhereUniqueWithoutTarifInput {
  where: UserTarifWhereUniqueInput!
  update: UserTarifUpdateWithoutTarifDataInput!
  create: UserTarifCreateWithoutTarifInput!
}

input UserTarifUpsertWithWhereUniqueWithoutUserInput {
  where: UserTarifWhereUniqueInput!
  update: UserTarifUpdateWithoutUserDataInput!
  create: UserTarifCreateWithoutUserInput!
}

input UserTarifWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [UserTarifWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [UserTarifWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserTarifWhereInput!]
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  dateTill: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  dateTill_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  dateTill_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  dateTill_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  dateTill_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  dateTill_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  dateTill_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  dateTill_gte: DateTime
  User: UserWhereInput
  Tarif: TarifWhereInput
}

input UserTarifWhereUniqueInput {
  id: ID
}

input UserUpdateDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateManyWithoutCreatedByInput {
  create: [UserCreateWithoutCreatedByInput!]
  connect: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutCreatedByInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input UserUpdateManyWithoutGroupsInput {
  create: [UserCreateWithoutGroupsInput!]
  connect: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutGroupsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutGroupsInput!]
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneWithoutAccountInput {
  create: UserCreateWithoutAccountInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutAccountDataInput
  upsert: UserUpsertWithoutAccountInput
}

input UserUpdateOneWithoutCommentsInput {
  create: UserCreateWithoutCommentsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutCommentsDataInput
  upsert: UserUpsertWithoutCommentsInput
}

input UserUpdateOneWithoutCreatedUsersInput {
  create: UserCreateWithoutCreatedUsersInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutCreatedUsersDataInput
  upsert: UserUpsertWithoutCreatedUsersInput
}

input UserUpdateOneWithoutFilesInput {
  create: UserCreateWithoutFilesInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutFilesDataInput
  upsert: UserUpsertWithoutFilesInput
}

input UserUpdateOneWithoutLogedInsInput {
  create: UserCreateWithoutLogedInsInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutLogedInsDataInput
  upsert: UserUpsertWithoutLogedInsInput
}

input UserUpdateOneWithoutPlacesInput {
  create: UserCreateWithoutPlacesInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutPlacesDataInput
  upsert: UserUpsertWithoutPlacesInput
}

input UserUpdateOneWithoutTarifsInput {
  create: UserCreateWithoutTarifsInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutTarifsDataInput
  upsert: UserUpsertWithoutTarifsInput
}

input UserUpdateOneWithoutTopicsInput {
  create: UserCreateWithoutTopicsInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutTopicsDataInput
  upsert: UserUpsertWithoutTopicsInput
}

input UserUpdateWithoutAccountDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutCommentsDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutCreatedByDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutCreatedUsersDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutFilesDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutGroupsDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutLogedInsDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
}

input UserUpdateWithoutPlacesDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutTarifsDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  topics: TopicUpdateManyWithoutCreated_byInput
  comments: CommentUpdateManyWithoutCreated_byInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithoutTopicsDataInput {
  user_id: Int
  first_name: String
  middle_name: String
  last_name: String
  fullname: String
  image: String
  gender: Int
  birth_date: DateTime
  country_id: Int
  region_id: Int
  city_id: Int
  status: String
  timezone: String
  language_id: Int
  num_blog_posts: Int
  last: Int
  created_at: DateTime
  notification: Int
  icq: String
  www: String
  contact_email: String
  mobile_phone: String
  home_phone: String
  about: String
  experience: String
  job_title: String
  work_place: String
  ip: String
  confirmation_code: String
  rating: Float
  etherwallet: String
  photo: String
  sudo: Boolean
  username: String
  email: String
  phone: String
  showEmail: Boolean
  showPhone: Boolean
  password: String
  address: String
  active: Boolean
  activated: Boolean
  deleted: Boolean
  comments: CommentUpdateManyWithoutCreated_byInput
  Tarifs: UserTarifUpdateManyWithoutUserInput
  Account: AccountUpdateOneWithoutUserInput
  Places: PlaceUpdateManyWithoutOwnerInput
  files: FileUpdateManyWithoutCreatedbyInput
  Groups: UserGroupUpdateManyWithoutUsersInput
  CreatedUsers: UserUpdateManyWithoutCreatedByInput
  CreatedBy: UserUpdateOneWithoutCreatedUsersInput
  LogedIns: LogedInUpdateManyWithoutUserInput
}

input UserUpdateWithWhereUniqueWithoutCreatedByInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutCreatedByDataInput!
}

input UserUpdateWithWhereUniqueWithoutGroupsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutGroupsDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutAccountInput {
  update: UserUpdateWithoutAccountDataInput!
  create: UserCreateWithoutAccountInput!
}

input UserUpsertWithoutCommentsInput {
  update: UserUpdateWithoutCommentsDataInput!
  create: UserCreateWithoutCommentsInput!
}

input UserUpsertWithoutCreatedUsersInput {
  update: UserUpdateWithoutCreatedUsersDataInput!
  create: UserCreateWithoutCreatedUsersInput!
}

input UserUpsertWithoutFilesInput {
  update: UserUpdateWithoutFilesDataInput!
  create: UserCreateWithoutFilesInput!
}

input UserUpsertWithoutLogedInsInput {
  update: UserUpdateWithoutLogedInsDataInput!
  create: UserCreateWithoutLogedInsInput!
}

input UserUpsertWithoutPlacesInput {
  update: UserUpdateWithoutPlacesDataInput!
  create: UserCreateWithoutPlacesInput!
}

input UserUpsertWithoutTarifsInput {
  update: UserUpdateWithoutTarifsDataInput!
  create: UserCreateWithoutTarifsInput!
}

input UserUpsertWithoutTopicsInput {
  update: UserUpdateWithoutTopicsDataInput!
  create: UserCreateWithoutTopicsInput!
}

input UserUpsertWithWhereUniqueWithoutCreatedByInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutCreatedByDataInput!
  create: UserCreateWithoutCreatedByInput!
}

input UserUpsertWithWhereUniqueWithoutGroupsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutGroupsDataInput!
  create: UserCreateWithoutGroupsInput!
}

input UserWhereInput {
  # Logical AND on all given filters.
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  # Logical OR on all given filters.
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  # Logical NOT on all given filters combined by AND.
  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  user_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  user_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  user_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  user_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  user_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  user_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  user_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  user_id_gte: Int
  first_name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  first_name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  first_name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  first_name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  first_name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  first_name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  first_name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  first_name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  first_name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  first_name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  first_name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  first_name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  first_name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  first_name_not_ends_with: String
  middle_name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  middle_name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  middle_name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  middle_name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  middle_name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  middle_name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  middle_name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  middle_name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  middle_name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  middle_name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  middle_name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  middle_name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  middle_name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  middle_name_not_ends_with: String
  last_name: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  last_name_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  last_name_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  last_name_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  last_name_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  last_name_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  last_name_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  last_name_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  last_name_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  last_name_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  last_name_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  last_name_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  last_name_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  last_name_not_ends_with: String
  fullname: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  fullname_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  fullname_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  fullname_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  fullname_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  fullname_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  fullname_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  fullname_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  fullname_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  fullname_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  fullname_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  fullname_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  fullname_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  fullname_not_ends_with: String
  image: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  image_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  image_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  image_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  image_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  image_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  image_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  image_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  image_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  image_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  image_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  image_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  image_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  image_not_ends_with: String
  gender: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  gender_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  gender_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  gender_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  gender_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  gender_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  gender_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  gender_gte: Int
  birth_date: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  birth_date_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  birth_date_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  birth_date_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  birth_date_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  birth_date_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  birth_date_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  birth_date_gte: DateTime
  country_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  country_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  country_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  country_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  country_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  country_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  country_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  country_id_gte: Int
  region_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  region_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  region_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  region_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  region_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  region_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  region_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  region_id_gte: Int
  city_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  city_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  city_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  city_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  city_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  city_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  city_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  city_id_gte: Int
  status: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  status_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  status_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  status_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  status_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  status_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  status_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  status_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  status_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  status_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  status_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  status_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  status_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  status_not_ends_with: String
  timezone: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  timezone_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  timezone_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  timezone_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  timezone_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  timezone_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  timezone_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  timezone_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  timezone_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  timezone_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  timezone_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  timezone_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  timezone_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  timezone_not_ends_with: String
  language_id: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  language_id_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  language_id_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  language_id_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  language_id_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  language_id_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  language_id_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  language_id_gte: Int
  num_blog_posts: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  num_blog_posts_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  num_blog_posts_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  num_blog_posts_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  num_blog_posts_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  num_blog_posts_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  num_blog_posts_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  num_blog_posts_gte: Int
  last: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  last_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  last_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  last_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  last_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  last_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  last_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  last_gte: Int
  created_at: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  created_at_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  created_at_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  created_at_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  created_at_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  created_at_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  created_at_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  created_at_gte: DateTime
  createdAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  notification: Int
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  notification_not: Int
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  notification_in: [Int!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  notification_not_in: [Int!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  notification_lt: Int
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  notification_lte: Int
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  notification_gt: Int
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  notification_gte: Int
  icq: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  icq_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  icq_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  icq_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  icq_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  icq_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  icq_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  icq_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  icq_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  icq_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  icq_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  icq_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  icq_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  icq_not_ends_with: String
  www: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  www_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  www_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  www_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  www_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  www_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  www_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  www_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  www_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  www_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  www_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  www_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  www_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  www_not_ends_with: String
  contact_email: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  contact_email_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  contact_email_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  contact_email_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  contact_email_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  contact_email_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  contact_email_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  contact_email_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  contact_email_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  contact_email_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  contact_email_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  contact_email_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  contact_email_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  contact_email_not_ends_with: String
  mobile_phone: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  mobile_phone_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  mobile_phone_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  mobile_phone_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  mobile_phone_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  mobile_phone_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  mobile_phone_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  mobile_phone_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  mobile_phone_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  mobile_phone_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  mobile_phone_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  mobile_phone_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  mobile_phone_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  mobile_phone_not_ends_with: String
  home_phone: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  home_phone_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  home_phone_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  home_phone_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  home_phone_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  home_phone_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  home_phone_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  home_phone_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  home_phone_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  home_phone_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  home_phone_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  home_phone_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  home_phone_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  home_phone_not_ends_with: String
  about: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  about_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  about_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  about_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  about_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  about_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  about_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  about_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  about_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  about_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  about_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  about_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  about_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  about_not_ends_with: String
  experience: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  experience_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  experience_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  experience_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  experience_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  experience_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  experience_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  experience_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  experience_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  experience_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  experience_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  experience_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  experience_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  experience_not_ends_with: String
  job_title: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  job_title_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  job_title_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  job_title_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  job_title_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  job_title_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  job_title_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  job_title_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  job_title_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  job_title_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  job_title_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  job_title_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  job_title_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  job_title_not_ends_with: String
  work_place: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  work_place_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  work_place_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  work_place_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  work_place_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  work_place_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  work_place_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  work_place_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  work_place_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  work_place_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  work_place_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  work_place_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  work_place_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  work_place_not_ends_with: String
  ip: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  ip_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  ip_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  ip_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  ip_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  ip_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  ip_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  ip_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  ip_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  ip_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  ip_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  ip_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  ip_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  ip_not_ends_with: String
  confirmation_code: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  confirmation_code_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  confirmation_code_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  confirmation_code_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  confirmation_code_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  confirmation_code_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  confirmation_code_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  confirmation_code_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  confirmation_code_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  confirmation_code_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  confirmation_code_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  confirmation_code_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  confirmation_code_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  confirmation_code_not_ends_with: String
  rating: Float
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  rating_not: Float
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  rating_in: [Float!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  rating_not_in: [Float!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  rating_lt: Float
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  rating_lte: Float
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  rating_gt: Float
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  rating_gte: Float
  etherwallet: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  etherwallet_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  etherwallet_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  etherwallet_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  etherwallet_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  etherwallet_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  etherwallet_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  etherwallet_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  etherwallet_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  etherwallet_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  etherwallet_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  etherwallet_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  etherwallet_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  etherwallet_not_ends_with: String
  photo: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  photo_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  photo_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  photo_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  photo_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  photo_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  photo_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  photo_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  photo_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  photo_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  photo_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  photo_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  photo_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  photo_not_ends_with: String
  sudo: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  sudo_not: Boolean
  id: ID
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  id_not: ID
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  id_lt: ID
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  id_gt: ID
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  # All values containing the given string.
  """
  All values containing the given string.
  """
  id_contains: ID
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  username: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  username_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  username_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  username_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  username_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  username_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  username_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  username_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  username_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  username_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  username_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  username_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  username_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  username_not_ends_with: String
  email: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  email_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  email_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  email_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  email_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  email_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  email_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  email_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  email_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  phone: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  phone_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  phone_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  phone_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  phone_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  phone_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  phone_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  phone_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  phone_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  phone_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  phone_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  phone_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  phone_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  phone_not_ends_with: String
  showEmail: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  showEmail_not: Boolean
  showPhone: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  showPhone_not: Boolean
  password: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  password_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  password_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  password_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  password_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  password_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  password_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  password_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  password_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  password_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  password_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  password_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  address: String
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  address_not: String
  # All values that are contained in given list.
  """
  All values that are contained in given list.
  """
  address_in: [String!]
  # All values that are not contained in given list.
  """
  All values that are not contained in given list.
  """
  address_not_in: [String!]
  # All values less than the given value.
  """
  All values less than the given value.
  """
  address_lt: String
  # All values less than or equal the given value.
  """
  All values less than or equal the given value.
  """
  address_lte: String
  # All values greater than the given value.
  """
  All values greater than the given value.
  """
  address_gt: String
  # All values greater than or equal the given value.
  """
  All values greater than or equal the given value.
  """
  address_gte: String
  # All values containing the given string.
  """
  All values containing the given string.
  """
  address_contains: String
  # All values not containing the given string.
  """
  All values not containing the given string.
  """
  address_not_contains: String
  # All values starting with the given string.
  """
  All values starting with the given string.
  """
  address_starts_with: String
  # All values not starting with the given string.
  """
  All values not starting with the given string.
  """
  address_not_starts_with: String
  # All values ending with the given string.
  """
  All values ending with the given string.
  """
  address_ends_with: String
  # All values not ending with the given string.
  """
  All values not ending with the given string.
  """
  address_not_ends_with: String
  active: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  active_not: Boolean
  activated: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  activated_not: Boolean
  deleted: Boolean
  # All values that are not equal to given value.
  """
  All values that are not equal to given value.
  """
  deleted_not: Boolean
  topics_every: TopicWhereInput
  topics_some: TopicWhereInput
  topics_none: TopicWhereInput
  comments_every: CommentWhereInput
  comments_some: CommentWhereInput
  comments_none: CommentWhereInput
  Tarifs_every: UserTarifWhereInput
  Tarifs_some: UserTarifWhereInput
  Tarifs_none: UserTarifWhereInput
  Account: AccountWhereInput
  Places_every: PlaceWhereInput
  Places_some: PlaceWhereInput
  Places_none: PlaceWhereInput
  files_every: FileWhereInput
  files_some: FileWhereInput
  files_none: FileWhereInput
  Groups_every: UserGroupWhereInput
  Groups_some: UserGroupWhereInput
  Groups_none: UserGroupWhereInput
  CreatedUsers_every: UserWhereInput
  CreatedUsers_some: UserWhereInput
  CreatedUsers_none: UserWhereInput
  CreatedBy: UserWhereInput
  LogedIns_every: LogedInWhereInput
  LogedIns_some: LogedInWhereInput
  LogedIns_none: LogedInWhereInput
}

input UserWhereUniqueInput {
  user_id: Int
  id: ID
  username: String
  email: String
}

scalar Upload

type Error {
  key: String!
  message: String!
}

type UserResponse {
  success: Boolean!
  message: String
  errors: [Error!]!
  data: User
}

type AuthPayload {
  success: Boolean!
  message: String
  errors: [Error!]!
  token: String
  data: User
}

type BeerPayload {
  success: Boolean!
  message: String
  errors: [Error!]!
  data: Beer
}

type PlaceBeerPayload {
  success: Boolean!
  message: String
  errors: [Error!]!
  data: PlaceBeer
}

type PlaceResponse {
  success: Boolean!
  message: String
  errors: [Error!]!
  data: Place
}

type TopicResponse {
  success: Boolean!
  message: String
  errors: [Error!]!
  data: Topic
}

type CommentResponse {
  success: Boolean!
  message: String
  errors: [Error!]!
  data: Comment
}

type PlacePayload {
  success: Boolean!
  message: String
  errors: [Error!]!
  data: Place
}

type MapPlaceConnectionEdges {
  node: [Place!]!
}

type MapPlaceConnection {
  aggregate: AggregatePlace!
  # ids: [ID!]!
   # places: [Place!]!
   # edges: MapPlaceConnectionEdges!
  edges: [PlaceEdge!]!
}

enum PlaceType {
  shop
  bar
  brewery
}

input CoordsInput {
  lat: Float!
  lng: Float!
}

type mapGeoObjectsConnection {
  aggregate: AggregatePlace!
  objects: [Place!]!
}
